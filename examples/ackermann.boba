func swap = {
    let n m;
    m n
}

func inc = 1 add-isize
func dec = 1 swap sub-isize

func is-zero = 0 eq-isize
func gt-zero = 0 swap gt-isize
func lt-zero = 0 swap lt-isize

rec func ackermann = {
    let n m;
    if m is-zero
    then {
        n inc
    } else {
        if m gt-zero n is-zero and-bool
        then {
            1 m dec ackermann
        } else {
            n dec m ackermann m dec ackermann
        }
    }
}

test ackermann-0-0 = 0 0 ackermann is 1
test ackermann-2-1 = 1 2 ackermann is 5
test ackermann-1-2 = 2 1 ackermann is 4
test ackermann-2-3 = 3 2 ackermann is 9
test ackermann-3-2 = 2 3 ackermann is 29