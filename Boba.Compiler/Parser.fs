// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "./Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Types


# 14 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | TRUE
  | FALSE
  | TUPLE
  | LIST
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | RECORD
  | VARIANT
  | FOR
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | PUT_REF
  | GET_REF
  | NEW_REF
  | WITH_STATE
  | WITH_PERMISSION
  | FUNCTION
  | LOCAL
  | LET
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | CLASS
  | INSTANCE
  | DERIVING
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | DATA
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | BAR
  | DOUBLE_BAR
  | DOT
  | PLUS
  | MINUS
  | COLON
  | DOUBLE_COLON
  | COMMA
  | SEMICOLON
  | L_BIND
  | R_BIND
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | L_ANGLE
  | R_ANGLE
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_RECORD
    | TOKEN_VARIANT
    | TOKEN_FOR
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_PUT_REF
    | TOKEN_GET_REF
    | TOKEN_NEW_REF
    | TOKEN_WITH_STATE
    | TOKEN_WITH_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_CLASS
    | TOKEN_INSTANCE
    | TOKEN_DERIVING
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_DATA
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_BAR
    | TOKEN_DOUBLE_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_L_ANGLE
    | TOKEN_R_ANGLE
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_datatype
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_local_function_list
    | NONTERM_local_function
    | NONTERM_simple_expr
    | NONTERM_simple_expr_list
    | NONTERM_word
    | NONTERM_with_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_function_literal
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_vector_literal
    | NONTERM_slice_literal
    | NONTERM_dictionary_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_dict_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern
    | NONTERM_dict_pattern
    | NONTERM_fixed_size_term_expr
    | NONTERM_fixed_size_term_factor_list
    | NONTERM_fixed_size_term_factor

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | TRUE  -> 1 
  | FALSE  -> 2 
  | TUPLE  -> 3 
  | LIST  -> 4 
  | VECTOR  -> 5 
  | SLICE  -> 6 
  | DICTIONARY  -> 7 
  | CASE  -> 8 
  | RECORD  -> 9 
  | VARIANT  -> 10 
  | FOR  -> 11 
  | BREAK  -> 12 
  | FINAL  -> 13 
  | FILL  -> 14 
  | LENGTH  -> 15 
  | RESULT  -> 16 
  | IF  -> 17 
  | WHEN  -> 18 
  | WHILE  -> 19 
  | THEN  -> 20 
  | ELSE  -> 21 
  | DO  -> 22 
  | MATCH  -> 23 
  | WITH  -> 24 
  | AFTER  -> 25 
  | HANDLE  -> 26 
  | UNTAG  -> 27 
  | PUT_REF  -> 28 
  | GET_REF  -> 29 
  | NEW_REF  -> 30 
  | WITH_STATE  -> 31 
  | WITH_PERMISSION  -> 32 
  | FUNCTION  -> 33 
  | LOCAL  -> 34 
  | LET  -> 35 
  | IS_ROUGHLY  -> 36 
  | IS_NOT  -> 37 
  | SATISFIES  -> 38 
  | VIOLATES  -> 39 
  | TEST  -> 40 
  | LAW  -> 41 
  | EXHAUSTIVE  -> 42 
  | SYNONYM  -> 43 
  | TAG  -> 44 
  | EFFECT  -> 45 
  | CLASS  -> 46 
  | INSTANCE  -> 47 
  | DERIVING  -> 48 
  | RULE  -> 49 
  | CHECK  -> 50 
  | PATTERN  -> 51 
  | RECURSIVE  -> 52 
  | DATA  -> 53 
  | MAIN  -> 54 
  | EXPORT  -> 55 
  | FROM  -> 56 
  | AS  -> 57 
  | IMPORT  -> 58 
  | REF  -> 59 
  | UNDERSCORE  -> 60 
  | EQUALS  -> 61 
  | ELLIPSIS  -> 62 
  | BAR  -> 63 
  | DOUBLE_BAR  -> 64 
  | DOT  -> 65 
  | PLUS  -> 66 
  | MINUS  -> 67 
  | COLON  -> 68 
  | DOUBLE_COLON  -> 69 
  | COMMA  -> 70 
  | SEMICOLON  -> 71 
  | L_BIND  -> 72 
  | R_BIND  -> 73 
  | L_ARROW  -> 74 
  | R_ARROW  -> 75 
  | L_BRACKET  -> 76 
  | R_BRACKET  -> 77 
  | L_BRACE  -> 78 
  | R_BRACE  -> 79 
  | L_PAREN  -> 80 
  | R_PAREN  -> 81 
  | L_ANGLE  -> 82 
  | R_ANGLE  -> 83 
  | STRING _ -> 84 
  | DECIMAL _ -> 85 
  | INTEGER _ -> 86 
  | PREDICATE_NAME _ -> 87 
  | OPERATOR_NAME _ -> 88 
  | BIG_NAME _ -> 89 
  | SMALL_NAME _ -> 90 
  | EOF  -> 91 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_TRUE 
  | 2 -> TOKEN_FALSE 
  | 3 -> TOKEN_TUPLE 
  | 4 -> TOKEN_LIST 
  | 5 -> TOKEN_VECTOR 
  | 6 -> TOKEN_SLICE 
  | 7 -> TOKEN_DICTIONARY 
  | 8 -> TOKEN_CASE 
  | 9 -> TOKEN_RECORD 
  | 10 -> TOKEN_VARIANT 
  | 11 -> TOKEN_FOR 
  | 12 -> TOKEN_BREAK 
  | 13 -> TOKEN_FINAL 
  | 14 -> TOKEN_FILL 
  | 15 -> TOKEN_LENGTH 
  | 16 -> TOKEN_RESULT 
  | 17 -> TOKEN_IF 
  | 18 -> TOKEN_WHEN 
  | 19 -> TOKEN_WHILE 
  | 20 -> TOKEN_THEN 
  | 21 -> TOKEN_ELSE 
  | 22 -> TOKEN_DO 
  | 23 -> TOKEN_MATCH 
  | 24 -> TOKEN_WITH 
  | 25 -> TOKEN_AFTER 
  | 26 -> TOKEN_HANDLE 
  | 27 -> TOKEN_UNTAG 
  | 28 -> TOKEN_PUT_REF 
  | 29 -> TOKEN_GET_REF 
  | 30 -> TOKEN_NEW_REF 
  | 31 -> TOKEN_WITH_STATE 
  | 32 -> TOKEN_WITH_PERMISSION 
  | 33 -> TOKEN_FUNCTION 
  | 34 -> TOKEN_LOCAL 
  | 35 -> TOKEN_LET 
  | 36 -> TOKEN_IS_ROUGHLY 
  | 37 -> TOKEN_IS_NOT 
  | 38 -> TOKEN_SATISFIES 
  | 39 -> TOKEN_VIOLATES 
  | 40 -> TOKEN_TEST 
  | 41 -> TOKEN_LAW 
  | 42 -> TOKEN_EXHAUSTIVE 
  | 43 -> TOKEN_SYNONYM 
  | 44 -> TOKEN_TAG 
  | 45 -> TOKEN_EFFECT 
  | 46 -> TOKEN_CLASS 
  | 47 -> TOKEN_INSTANCE 
  | 48 -> TOKEN_DERIVING 
  | 49 -> TOKEN_RULE 
  | 50 -> TOKEN_CHECK 
  | 51 -> TOKEN_PATTERN 
  | 52 -> TOKEN_RECURSIVE 
  | 53 -> TOKEN_DATA 
  | 54 -> TOKEN_MAIN 
  | 55 -> TOKEN_EXPORT 
  | 56 -> TOKEN_FROM 
  | 57 -> TOKEN_AS 
  | 58 -> TOKEN_IMPORT 
  | 59 -> TOKEN_REF 
  | 60 -> TOKEN_UNDERSCORE 
  | 61 -> TOKEN_EQUALS 
  | 62 -> TOKEN_ELLIPSIS 
  | 63 -> TOKEN_BAR 
  | 64 -> TOKEN_DOUBLE_BAR 
  | 65 -> TOKEN_DOT 
  | 66 -> TOKEN_PLUS 
  | 67 -> TOKEN_MINUS 
  | 68 -> TOKEN_COLON 
  | 69 -> TOKEN_DOUBLE_COLON 
  | 70 -> TOKEN_COMMA 
  | 71 -> TOKEN_SEMICOLON 
  | 72 -> TOKEN_L_BIND 
  | 73 -> TOKEN_R_BIND 
  | 74 -> TOKEN_L_ARROW 
  | 75 -> TOKEN_R_ARROW 
  | 76 -> TOKEN_L_BRACKET 
  | 77 -> TOKEN_R_BRACKET 
  | 78 -> TOKEN_L_BRACE 
  | 79 -> TOKEN_R_BRACE 
  | 80 -> TOKEN_L_PAREN 
  | 81 -> TOKEN_R_PAREN 
  | 82 -> TOKEN_L_ANGLE 
  | 83 -> TOKEN_R_ANGLE 
  | 84 -> TOKEN_STRING 
  | 85 -> TOKEN_DECIMAL 
  | 86 -> TOKEN_INTEGER 
  | 87 -> TOKEN_PREDICATE_NAME 
  | 88 -> TOKEN_OPERATOR_NAME 
  | 89 -> TOKEN_BIG_NAME 
  | 90 -> TOKEN_SMALL_NAME 
  | 91 -> TOKEN_EOF 
  | 94 -> TOKEN_end_of_input
  | 92 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import_path 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_remote 
    | 13 -> NONTERM_export 
    | 14 -> NONTERM_brace_names 
    | 15 -> NONTERM_name_list 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_declaration 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_function 
    | 29 -> NONTERM_function 
    | 30 -> NONTERM_function 
    | 31 -> NONTERM_function 
    | 32 -> NONTERM_function_list 
    | 33 -> NONTERM_function_list 
    | 34 -> NONTERM_datatype 
    | 35 -> NONTERM_datatype_list 
    | 36 -> NONTERM_datatype_list 
    | 37 -> NONTERM_constructor 
    | 38 -> NONTERM_constructor_list 
    | 39 -> NONTERM_constructor_list 
    | 40 -> NONTERM_effect 
    | 41 -> NONTERM_handler_template_list 
    | 42 -> NONTERM_handler_template_list 
    | 43 -> NONTERM_handler_template 
    | 44 -> NONTERM_handler_template 
    | 45 -> NONTERM_term_statement_block 
    | 46 -> NONTERM_term_statement_list 
    | 47 -> NONTERM_term_statement_list 
    | 48 -> NONTERM_term_statement 
    | 49 -> NONTERM_term_statement 
    | 50 -> NONTERM_term_statement 
    | 51 -> NONTERM_term_statement 
    | 52 -> NONTERM_term_statement 
    | 53 -> NONTERM_local_function_list 
    | 54 -> NONTERM_local_function_list 
    | 55 -> NONTERM_local_function 
    | 56 -> NONTERM_simple_expr 
    | 57 -> NONTERM_simple_expr 
    | 58 -> NONTERM_simple_expr_list 
    | 59 -> NONTERM_simple_expr_list 
    | 60 -> NONTERM_word 
    | 61 -> NONTERM_word 
    | 62 -> NONTERM_word 
    | 63 -> NONTERM_word 
    | 64 -> NONTERM_word 
    | 65 -> NONTERM_word 
    | 66 -> NONTERM_word 
    | 67 -> NONTERM_word 
    | 68 -> NONTERM_word 
    | 69 -> NONTERM_word 
    | 70 -> NONTERM_word 
    | 71 -> NONTERM_word 
    | 72 -> NONTERM_word 
    | 73 -> NONTERM_word 
    | 74 -> NONTERM_word 
    | 75 -> NONTERM_word 
    | 76 -> NONTERM_word 
    | 77 -> NONTERM_word 
    | 78 -> NONTERM_word 
    | 79 -> NONTERM_word 
    | 80 -> NONTERM_word 
    | 81 -> NONTERM_word 
    | 82 -> NONTERM_word 
    | 83 -> NONTERM_word 
    | 84 -> NONTERM_word 
    | 85 -> NONTERM_word 
    | 86 -> NONTERM_word 
    | 87 -> NONTERM_word 
    | 88 -> NONTERM_word 
    | 89 -> NONTERM_word 
    | 90 -> NONTERM_word 
    | 91 -> NONTERM_word 
    | 92 -> NONTERM_with_permission 
    | 93 -> NONTERM_handle_word 
    | 94 -> NONTERM_handle_word 
    | 95 -> NONTERM_handler 
    | 96 -> NONTERM_return 
    | 97 -> NONTERM_return 
    | 98 -> NONTERM_param_list 
    | 99 -> NONTERM_param_list 
    | 100 -> NONTERM_handler_list 
    | 101 -> NONTERM_handler_list 
    | 102 -> NONTERM_match_word 
    | 103 -> NONTERM_match_word 
    | 104 -> NONTERM_match_clause_list 
    | 105 -> NONTERM_match_clause_list 
    | 106 -> NONTERM_match_clause 
    | 107 -> NONTERM_if_word 
    | 108 -> NONTERM_when_word 
    | 109 -> NONTERM_while_word 
    | 110 -> NONTERM_function_literal 
    | 111 -> NONTERM_tuple_literal 
    | 112 -> NONTERM_tuple_literal 
    | 113 -> NONTERM_list_literal 
    | 114 -> NONTERM_list_literal 
    | 115 -> NONTERM_vector_literal 
    | 116 -> NONTERM_vector_literal 
    | 117 -> NONTERM_slice_literal 
    | 118 -> NONTERM_dictionary_literal 
    | 119 -> NONTERM_dictionary_literal 
    | 120 -> NONTERM_record_literal 
    | 121 -> NONTERM_record_literal 
    | 122 -> NONTERM_variant_literal 
    | 123 -> NONTERM_case_word 
    | 124 -> NONTERM_case_clause_list 
    | 125 -> NONTERM_case_clause_list 
    | 126 -> NONTERM_case_clause 
    | 127 -> NONTERM_field_list 
    | 128 -> NONTERM_field_list 
    | 129 -> NONTERM_field 
    | 130 -> NONTERM_identifier 
    | 131 -> NONTERM_identifier 
    | 132 -> NONTERM_qualified_name 
    | 133 -> NONTERM_qualified_name 
    | 134 -> NONTERM_qualified_name 
    | 135 -> NONTERM_qualified_name 
    | 136 -> NONTERM_qualified_name 
    | 137 -> NONTERM_qualified_ctor 
    | 138 -> NONTERM_qualified_ctor 
    | 139 -> NONTERM_no_dot_pattern_expr_list 
    | 140 -> NONTERM_no_dot_pattern_expr_list 
    | 141 -> NONTERM_pattern_expr_list 
    | 142 -> NONTERM_pattern_expr_list 
    | 143 -> NONTERM_pattern_expr_list 
    | 144 -> NONTERM_field_pattern_list 
    | 145 -> NONTERM_field_pattern_list 
    | 146 -> NONTERM_field_pattern_list 
    | 147 -> NONTERM_dict_pattern_list 
    | 148 -> NONTERM_dict_pattern_list 
    | 149 -> NONTERM_dict_pattern_list 
    | 150 -> NONTERM_pattern_expr 
    | 151 -> NONTERM_pattern_expr 
    | 152 -> NONTERM_pattern_expr 
    | 153 -> NONTERM_pattern_expr 
    | 154 -> NONTERM_pattern_expr 
    | 155 -> NONTERM_pattern_expr 
    | 156 -> NONTERM_pattern_expr 
    | 157 -> NONTERM_pattern_expr 
    | 158 -> NONTERM_pattern_expr 
    | 159 -> NONTERM_pattern_expr 
    | 160 -> NONTERM_pattern_expr 
    | 161 -> NONTERM_pattern_expr 
    | 162 -> NONTERM_pattern_expr 
    | 163 -> NONTERM_pattern_expr 
    | 164 -> NONTERM_pattern_expr 
    | 165 -> NONTERM_pattern_expr 
    | 166 -> NONTERM_pattern_expr 
    | 167 -> NONTERM_tuple_pattern 
    | 168 -> NONTERM_list_pattern 
    | 169 -> NONTERM_vector_pattern 
    | 170 -> NONTERM_slice_pattern 
    | 171 -> NONTERM_record_pattern 
    | 172 -> NONTERM_dict_pattern 
    | 173 -> NONTERM_fixed_size_term_expr 
    | 174 -> NONTERM_fixed_size_term_factor_list 
    | 175 -> NONTERM_fixed_size_term_factor_list 
    | 176 -> NONTERM_fixed_size_term_factor 
    | 177 -> NONTERM_fixed_size_term_factor 
    | 178 -> NONTERM_fixed_size_term_factor 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 94 
let _fsyacc_tagOfErrorTerminal = 92

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | RECORD  -> "RECORD" 
  | VARIANT  -> "VARIANT" 
  | FOR  -> "FOR" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | PUT_REF  -> "PUT_REF" 
  | GET_REF  -> "GET_REF" 
  | NEW_REF  -> "NEW_REF" 
  | WITH_STATE  -> "WITH_STATE" 
  | WITH_PERMISSION  -> "WITH_PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | CLASS  -> "CLASS" 
  | INSTANCE  -> "INSTANCE" 
  | DERIVING  -> "DERIVING" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | DATA  -> "DATA" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | BAR  -> "BAR" 
  | DOUBLE_BAR  -> "DOUBLE_BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | L_ANGLE  -> "L_ANGLE" 
  | R_ANGLE  -> "R_ANGLE" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | VARIANT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | PUT_REF  -> (null : System.Object) 
  | GET_REF  -> (null : System.Object) 
  | NEW_REF  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | WITH_PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | DERIVING  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOUBLE_BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | L_ANGLE  -> (null : System.Object) 
  | R_ANGLE  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 24us; 19us; 24us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 36us; 37us; 2us; 65535us; 38us; 39us; 41us; 42us; 2us; 65535us; 38us; 41us; 41us; 41us; 2us; 65535us; 2us; 10us; 10us; 10us; 5us; 65535us; 2us; 46us; 10us; 46us; 47us; 48us; 49us; 77us; 77us; 77us; 2us; 65535us; 49us; 50us; 77us; 78us; 5us; 65535us; 2us; 57us; 10us; 57us; 47us; 58us; 49us; 84us; 84us; 84us; 2us; 65535us; 49us; 59us; 84us; 85us; 2us; 65535us; 82us; 87us; 88us; 87us; 2us; 65535us; 82us; 83us; 88us; 89us; 2us; 65535us; 2us; 61us; 10us; 61us; 2us; 65535us; 93us; 94us; 96us; 97us; 2us; 65535us; 93us; 96us; 96us; 96us; 39us; 65535us; 13us; 134us; 64us; 134us; 69us; 134us; 72us; 134us; 75us; 134us; 102us; 134us; 106us; 134us; 110us; 134us; 123us; 134us; 125us; 134us; 132us; 134us; 157us; 158us; 173us; 174us; 176us; 177us; 187us; 134us; 191us; 134us; 194us; 134us; 205us; 134us; 212us; 134us; 215us; 134us; 217us; 218us; 219us; 220us; 221us; 134us; 223us; 224us; 225us; 134us; 227us; 228us; 229us; 134us; 233us; 134us; 236us; 134us; 240us; 134us; 243us; 134us; 247us; 134us; 250us; 134us; 260us; 134us; 261us; 134us; 267us; 134us; 282us; 134us; 289us; 134us; 297us; 134us; 2us; 65535us; 102us; 103us; 106us; 107us; 2us; 65535us; 102us; 105us; 106us; 105us; 2us; 65535us; 114us; 115us; 118us; 119us; 4us; 65535us; 102us; 112us; 106us; 112us; 114us; 118us; 118us; 118us; 32us; 65535us; 13us; 14us; 64us; 65us; 69us; 70us; 72us; 73us; 75us; 76us; 102us; 117us; 106us; 117us; 110us; 111us; 123us; 124us; 125us; 126us; 132us; 127us; 187us; 188us; 191us; 192us; 194us; 195us; 205us; 206us; 212us; 213us; 215us; 216us; 221us; 222us; 225us; 226us; 229us; 230us; 233us; 128us; 236us; 127us; 240us; 129us; 243us; 127us; 247us; 130us; 250us; 127us; 260us; 131us; 261us; 127us; 267us; 268us; 282us; 283us; 289us; 290us; 297us; 298us; 9us; 65535us; 132us; 133us; 233us; 234us; 236us; 237us; 240us; 241us; 243us; 244us; 247us; 248us; 250us; 251us; 260us; 264us; 261us; 262us; 32us; 65535us; 13us; 125us; 64us; 125us; 69us; 125us; 72us; 125us; 75us; 125us; 102us; 125us; 106us; 125us; 110us; 125us; 123us; 125us; 125us; 125us; 132us; 125us; 187us; 125us; 191us; 125us; 194us; 125us; 205us; 125us; 212us; 125us; 215us; 125us; 221us; 125us; 225us; 125us; 229us; 125us; 233us; 125us; 236us; 125us; 240us; 125us; 243us; 125us; 247us; 125us; 250us; 125us; 260us; 125us; 261us; 125us; 267us; 125us; 282us; 125us; 289us; 125us; 297us; 125us; 32us; 65535us; 13us; 159us; 64us; 159us; 69us; 159us; 72us; 159us; 75us; 159us; 102us; 159us; 106us; 159us; 110us; 159us; 123us; 159us; 125us; 159us; 132us; 159us; 187us; 159us; 191us; 159us; 194us; 159us; 205us; 159us; 212us; 159us; 215us; 159us; 221us; 159us; 225us; 159us; 229us; 159us; 233us; 159us; 236us; 159us; 240us; 159us; 243us; 159us; 247us; 159us; 250us; 159us; 260us; 159us; 261us; 159us; 267us; 159us; 282us; 159us; 289us; 159us; 297us; 159us; 32us; 65535us; 13us; 135us; 64us; 135us; 69us; 135us; 72us; 135us; 75us; 135us; 102us; 135us; 106us; 135us; 110us; 135us; 123us; 135us; 125us; 135us; 132us; 135us; 187us; 135us; 191us; 135us; 194us; 135us; 205us; 135us; 212us; 135us; 215us; 135us; 221us; 135us; 225us; 135us; 229us; 135us; 233us; 135us; 236us; 135us; 240us; 135us; 243us; 135us; 247us; 135us; 250us; 135us; 260us; 135us; 261us; 135us; 267us; 135us; 282us; 135us; 289us; 135us; 297us; 135us; 2us; 65535us; 179us; 198us; 198us; 198us; 1us; 65535us; 180us; 181us; 9us; 65535us; 53us; 54us; 66us; 67us; 80us; 81us; 91us; 92us; 99us; 100us; 172us; 173us; 175us; 176us; 185us; 186us; 196us; 197us; 2us; 65535us; 179us; 180us; 198us; 199us; 32us; 65535us; 13us; 136us; 64us; 136us; 69us; 136us; 72us; 136us; 75us; 136us; 102us; 136us; 106us; 136us; 110us; 136us; 123us; 136us; 125us; 136us; 132us; 136us; 187us; 136us; 191us; 136us; 194us; 136us; 205us; 136us; 212us; 136us; 215us; 136us; 221us; 136us; 225us; 136us; 229us; 136us; 233us; 136us; 236us; 136us; 240us; 136us; 243us; 136us; 247us; 136us; 250us; 136us; 260us; 136us; 261us; 136us; 267us; 136us; 282us; 136us; 289us; 136us; 297us; 136us; 2us; 65535us; 201us; 202us; 209us; 210us; 2us; 65535us; 201us; 209us; 209us; 209us; 32us; 65535us; 13us; 137us; 64us; 137us; 69us; 137us; 72us; 137us; 75us; 137us; 102us; 137us; 106us; 137us; 110us; 137us; 123us; 137us; 125us; 137us; 132us; 137us; 187us; 137us; 191us; 137us; 194us; 137us; 205us; 137us; 212us; 137us; 215us; 137us; 221us; 137us; 225us; 137us; 229us; 137us; 233us; 137us; 236us; 137us; 240us; 137us; 243us; 137us; 247us; 137us; 250us; 137us; 260us; 137us; 261us; 137us; 267us; 137us; 282us; 137us; 289us; 137us; 297us; 137us; 32us; 65535us; 13us; 138us; 64us; 138us; 69us; 138us; 72us; 138us; 75us; 138us; 102us; 138us; 106us; 138us; 110us; 138us; 123us; 138us; 125us; 138us; 132us; 138us; 187us; 138us; 191us; 138us; 194us; 138us; 205us; 138us; 212us; 138us; 215us; 138us; 221us; 138us; 225us; 138us; 229us; 138us; 233us; 138us; 236us; 138us; 240us; 138us; 243us; 138us; 247us; 138us; 250us; 138us; 260us; 138us; 261us; 138us; 267us; 138us; 282us; 138us; 289us; 138us; 297us; 138us; 32us; 65535us; 13us; 139us; 64us; 139us; 69us; 139us; 72us; 139us; 75us; 139us; 102us; 139us; 106us; 139us; 110us; 139us; 123us; 139us; 125us; 139us; 132us; 139us; 187us; 139us; 191us; 139us; 194us; 139us; 205us; 139us; 212us; 139us; 215us; 139us; 221us; 139us; 225us; 139us; 229us; 139us; 233us; 139us; 236us; 139us; 240us; 139us; 243us; 139us; 247us; 139us; 250us; 139us; 260us; 139us; 261us; 139us; 267us; 139us; 282us; 139us; 289us; 139us; 297us; 139us; 32us; 65535us; 13us; 140us; 64us; 140us; 69us; 140us; 72us; 140us; 75us; 140us; 102us; 140us; 106us; 140us; 110us; 140us; 123us; 140us; 125us; 140us; 132us; 140us; 187us; 140us; 191us; 140us; 194us; 140us; 205us; 140us; 212us; 140us; 215us; 140us; 221us; 140us; 225us; 140us; 229us; 140us; 233us; 140us; 236us; 140us; 240us; 140us; 243us; 140us; 247us; 140us; 250us; 140us; 260us; 140us; 261us; 140us; 267us; 140us; 282us; 140us; 289us; 140us; 297us; 140us; 32us; 65535us; 13us; 141us; 64us; 141us; 69us; 141us; 72us; 141us; 75us; 141us; 102us; 141us; 106us; 141us; 110us; 141us; 123us; 141us; 125us; 141us; 132us; 141us; 187us; 141us; 191us; 141us; 194us; 141us; 205us; 141us; 212us; 141us; 215us; 141us; 221us; 141us; 225us; 141us; 229us; 141us; 233us; 141us; 236us; 141us; 240us; 141us; 243us; 141us; 247us; 141us; 250us; 141us; 260us; 141us; 261us; 141us; 267us; 141us; 282us; 141us; 289us; 141us; 297us; 141us; 32us; 65535us; 13us; 142us; 64us; 142us; 69us; 142us; 72us; 142us; 75us; 142us; 102us; 142us; 106us; 142us; 110us; 142us; 123us; 142us; 125us; 142us; 132us; 142us; 187us; 142us; 191us; 142us; 194us; 142us; 205us; 142us; 212us; 142us; 215us; 142us; 221us; 142us; 225us; 142us; 229us; 142us; 233us; 142us; 236us; 142us; 240us; 142us; 243us; 142us; 247us; 142us; 250us; 142us; 260us; 142us; 261us; 142us; 267us; 142us; 282us; 142us; 289us; 142us; 297us; 142us; 32us; 65535us; 13us; 143us; 64us; 143us; 69us; 143us; 72us; 143us; 75us; 143us; 102us; 143us; 106us; 143us; 110us; 143us; 123us; 143us; 125us; 143us; 132us; 143us; 187us; 143us; 191us; 143us; 194us; 143us; 205us; 143us; 212us; 143us; 215us; 143us; 221us; 143us; 225us; 143us; 229us; 143us; 233us; 143us; 236us; 143us; 240us; 143us; 243us; 143us; 247us; 143us; 250us; 143us; 260us; 143us; 261us; 143us; 267us; 143us; 282us; 143us; 289us; 143us; 297us; 143us; 32us; 65535us; 13us; 144us; 64us; 144us; 69us; 144us; 72us; 144us; 75us; 144us; 102us; 144us; 106us; 144us; 110us; 144us; 123us; 144us; 125us; 144us; 132us; 144us; 187us; 144us; 191us; 144us; 194us; 144us; 205us; 144us; 212us; 144us; 215us; 144us; 221us; 144us; 225us; 144us; 229us; 144us; 233us; 144us; 236us; 144us; 240us; 144us; 243us; 144us; 247us; 144us; 250us; 144us; 260us; 144us; 261us; 144us; 267us; 144us; 282us; 144us; 289us; 144us; 297us; 144us; 32us; 65535us; 13us; 145us; 64us; 145us; 69us; 145us; 72us; 145us; 75us; 145us; 102us; 145us; 106us; 145us; 110us; 145us; 123us; 145us; 125us; 145us; 132us; 145us; 187us; 145us; 191us; 145us; 194us; 145us; 205us; 145us; 212us; 145us; 215us; 145us; 221us; 145us; 225us; 145us; 229us; 145us; 233us; 145us; 236us; 145us; 240us; 145us; 243us; 145us; 247us; 145us; 250us; 145us; 260us; 145us; 261us; 145us; 267us; 145us; 282us; 145us; 289us; 145us; 297us; 145us; 32us; 65535us; 13us; 146us; 64us; 146us; 69us; 146us; 72us; 146us; 75us; 146us; 102us; 146us; 106us; 146us; 110us; 146us; 123us; 146us; 125us; 146us; 132us; 146us; 187us; 146us; 191us; 146us; 194us; 146us; 205us; 146us; 212us; 146us; 215us; 146us; 221us; 146us; 225us; 146us; 229us; 146us; 233us; 146us; 236us; 146us; 240us; 146us; 243us; 146us; 247us; 146us; 250us; 146us; 260us; 146us; 261us; 146us; 267us; 146us; 282us; 146us; 289us; 146us; 297us; 146us; 32us; 65535us; 13us; 153us; 64us; 153us; 69us; 153us; 72us; 153us; 75us; 153us; 102us; 153us; 106us; 153us; 110us; 153us; 123us; 153us; 125us; 153us; 132us; 153us; 187us; 153us; 191us; 153us; 194us; 153us; 205us; 153us; 212us; 153us; 215us; 153us; 221us; 153us; 225us; 153us; 229us; 153us; 233us; 153us; 236us; 153us; 240us; 153us; 243us; 153us; 247us; 153us; 250us; 153us; 260us; 153us; 261us; 153us; 267us; 153us; 282us; 153us; 289us; 153us; 297us; 153us; 32us; 65535us; 13us; 156us; 64us; 156us; 69us; 156us; 72us; 156us; 75us; 156us; 102us; 156us; 106us; 156us; 110us; 156us; 123us; 156us; 125us; 156us; 132us; 156us; 187us; 156us; 191us; 156us; 194us; 156us; 205us; 156us; 212us; 156us; 215us; 156us; 221us; 156us; 225us; 156us; 229us; 156us; 233us; 156us; 236us; 156us; 240us; 156us; 243us; 156us; 247us; 156us; 250us; 156us; 260us; 156us; 261us; 156us; 267us; 156us; 282us; 156us; 289us; 156us; 297us; 156us; 2us; 65535us; 279us; 280us; 286us; 287us; 2us; 65535us; 279us; 286us; 286us; 286us; 3us; 65535us; 267us; 272us; 269us; 270us; 293us; 294us; 4us; 65535us; 267us; 292us; 269us; 292us; 275us; 276us; 293us; 292us; 34us; 65535us; 13us; 171us; 64us; 171us; 69us; 171us; 72us; 171us; 75us; 171us; 102us; 171us; 106us; 171us; 110us; 171us; 123us; 171us; 125us; 171us; 132us; 171us; 179us; 185us; 187us; 171us; 191us; 171us; 194us; 171us; 198us; 185us; 205us; 171us; 212us; 171us; 215us; 171us; 221us; 171us; 225us; 171us; 229us; 171us; 233us; 171us; 236us; 171us; 240us; 171us; 243us; 171us; 247us; 171us; 250us; 171us; 260us; 171us; 261us; 171us; 267us; 171us; 282us; 171us; 289us; 171us; 297us; 171us; 36us; 65535us; 13us; 299us; 64us; 299us; 69us; 299us; 72us; 299us; 75us; 299us; 102us; 299us; 106us; 299us; 110us; 299us; 123us; 299us; 125us; 299us; 132us; 299us; 163us; 164us; 179us; 299us; 187us; 299us; 191us; 299us; 194us; 299us; 198us; 299us; 205us; 299us; 212us; 299us; 215us; 299us; 221us; 299us; 225us; 299us; 229us; 299us; 233us; 299us; 236us; 299us; 240us; 299us; 243us; 299us; 247us; 299us; 250us; 299us; 260us; 299us; 261us; 299us; 267us; 299us; 282us; 299us; 289us; 299us; 297us; 299us; 307us; 308us; 22us; 65535us; 55us; 339us; 63us; 339us; 68us; 339us; 108us; 339us; 190us; 339us; 201us; 339us; 209us; 339us; 312us; 313us; 314us; 339us; 316us; 339us; 320us; 339us; 325us; 339us; 326us; 339us; 335us; 339us; 337us; 339us; 340us; 341us; 341us; 339us; 351us; 339us; 355us; 339us; 359us; 339us; 363us; 339us; 371us; 339us; 4us; 65535us; 63us; 71us; 68us; 74us; 108us; 109us; 190us; 193us; 9us; 65535us; 201us; 211us; 209us; 211us; 314us; 315us; 316us; 318us; 341us; 342us; 351us; 352us; 355us; 356us; 359us; 360us; 363us; 364us; 2us; 65535us; 321us; 323us; 367us; 368us; 2us; 65535us; 326us; 328us; 371us; 372us; 20us; 65535us; 55us; 56us; 63us; 314us; 68us; 314us; 108us; 314us; 190us; 314us; 201us; 316us; 209us; 316us; 314us; 316us; 316us; 316us; 320us; 321us; 325us; 326us; 326us; 324us; 335us; 336us; 337us; 338us; 341us; 316us; 351us; 316us; 355us; 316us; 359us; 316us; 363us; 316us; 371us; 324us; 20us; 65535us; 55us; 344us; 63us; 344us; 68us; 344us; 108us; 344us; 190us; 344us; 201us; 344us; 209us; 344us; 314us; 344us; 316us; 344us; 320us; 344us; 325us; 344us; 326us; 344us; 335us; 344us; 337us; 344us; 341us; 344us; 351us; 344us; 355us; 344us; 359us; 344us; 363us; 344us; 371us; 344us; 20us; 65535us; 55us; 345us; 63us; 345us; 68us; 345us; 108us; 345us; 190us; 345us; 201us; 345us; 209us; 345us; 314us; 345us; 316us; 345us; 320us; 345us; 325us; 345us; 326us; 345us; 335us; 345us; 337us; 345us; 341us; 345us; 351us; 345us; 355us; 345us; 359us; 345us; 363us; 345us; 371us; 345us; 20us; 65535us; 55us; 346us; 63us; 346us; 68us; 346us; 108us; 346us; 190us; 346us; 201us; 346us; 209us; 346us; 314us; 346us; 316us; 346us; 320us; 346us; 325us; 346us; 326us; 346us; 335us; 346us; 337us; 346us; 341us; 346us; 351us; 346us; 355us; 346us; 359us; 346us; 363us; 346us; 371us; 346us; 20us; 65535us; 55us; 347us; 63us; 347us; 68us; 347us; 108us; 347us; 190us; 347us; 201us; 347us; 209us; 347us; 314us; 347us; 316us; 347us; 320us; 347us; 325us; 347us; 326us; 347us; 335us; 347us; 337us; 347us; 341us; 347us; 351us; 347us; 355us; 347us; 359us; 347us; 363us; 347us; 371us; 347us; 20us; 65535us; 55us; 348us; 63us; 348us; 68us; 348us; 108us; 348us; 190us; 348us; 201us; 348us; 209us; 348us; 314us; 348us; 316us; 348us; 320us; 348us; 325us; 348us; 326us; 348us; 335us; 348us; 337us; 348us; 341us; 348us; 351us; 348us; 355us; 348us; 359us; 348us; 363us; 348us; 371us; 348us; 20us; 65535us; 55us; 349us; 63us; 349us; 68us; 349us; 108us; 349us; 190us; 349us; 201us; 349us; 209us; 349us; 314us; 349us; 316us; 349us; 320us; 349us; 325us; 349us; 326us; 349us; 335us; 349us; 337us; 349us; 341us; 349us; 351us; 349us; 355us; 349us; 359us; 349us; 363us; 349us; 371us; 349us; 3us; 65535us; 254us; 255us; 256us; 257us; 300us; 301us; 4us; 65535us; 254us; 374us; 256us; 374us; 300us; 374us; 376us; 377us; 4us; 65535us; 254us; 375us; 256us; 375us; 300us; 375us; 376us; 375us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 40us; 43us; 49us; 52us; 55us; 58us; 61us; 64us; 67us; 107us; 110us; 113us; 116us; 121us; 154us; 164us; 197us; 230us; 263us; 266us; 268us; 278us; 281us; 314us; 317us; 320us; 353us; 386us; 419us; 452us; 485us; 518us; 551us; 584us; 617us; 650us; 683us; 716us; 719us; 722us; 726us; 731us; 766us; 803us; 826us; 831us; 841us; 844us; 847us; 868us; 889us; 910us; 931us; 952us; 973us; 994us; 998us; 1003us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 2us; 8us; 9us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 16us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 4us; 21us; 22us; 25us; 26us; 1us; 21us; 2us; 22us; 26us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 27us; 4us; 28us; 29us; 30us; 31us; 4us; 28us; 29us; 30us; 31us; 1us; 28us; 1us; 28us; 2us; 29us; 31us; 2us; 29us; 31us; 2us; 29us; 31us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 2us; 32us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 2us; 35us; 36us; 1us; 36us; 1us; 37us; 2us; 38us; 39us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 2us; 41us; 42us; 1us; 42us; 2us; 43us; 44us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 2us; 46us; 47us; 1us; 47us; 1us; 47us; 2us; 48us; 49us; 2us; 48us; 49us; 1us; 49us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 52us; 2us; 53us; 54us; 1us; 54us; 1us; 55us; 1us; 55us; 1us; 55us; 1us; 55us; 1us; 55us; 1us; 57us; 1us; 57us; 1us; 59us; 2us; 59us; 112us; 2us; 59us; 114us; 2us; 59us; 116us; 2us; 59us; 118us; 1us; 59us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 92us; 2us; 93us; 94us; 2us; 93us; 94us; 2us; 93us; 94us; 2us; 93us; 94us; 2us; 93us; 94us; 2us; 93us; 94us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 95us; 2us; 96us; 97us; 1us; 96us; 1us; 96us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 99us; 1us; 99us; 1us; 101us; 1us; 101us; 2us; 102us; 103us; 2us; 102us; 103us; 2us; 102us; 103us; 1us; 102us; 1us; 103us; 1us; 103us; 1us; 103us; 1us; 103us; 1us; 103us; 2us; 104us; 105us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 1us; 106us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 108us; 1us; 108us; 1us; 108us; 1us; 108us; 1us; 109us; 1us; 109us; 1us; 109us; 1us; 109us; 1us; 110us; 1us; 110us; 1us; 110us; 2us; 111us; 112us; 2us; 111us; 112us; 1us; 111us; 1us; 111us; 1us; 112us; 1us; 112us; 1us; 112us; 2us; 113us; 114us; 2us; 113us; 114us; 1us; 113us; 1us; 113us; 1us; 114us; 1us; 114us; 1us; 114us; 2us; 115us; 116us; 2us; 115us; 116us; 1us; 115us; 1us; 115us; 1us; 116us; 1us; 116us; 1us; 116us; 1us; 117us; 1us; 117us; 1us; 117us; 1us; 117us; 1us; 117us; 1us; 117us; 2us; 118us; 119us; 2us; 118us; 119us; 1us; 118us; 1us; 118us; 1us; 118us; 1us; 119us; 1us; 119us; 2us; 120us; 121us; 2us; 120us; 121us; 1us; 120us; 1us; 120us; 1us; 120us; 1us; 120us; 1us; 121us; 1us; 121us; 1us; 122us; 1us; 122us; 1us; 122us; 1us; 122us; 1us; 123us; 1us; 123us; 1us; 123us; 1us; 123us; 1us; 123us; 1us; 123us; 1us; 123us; 1us; 123us; 2us; 124us; 125us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 126us; 1us; 126us; 1us; 128us; 1us; 128us; 1us; 128us; 1us; 129us; 3us; 129us; 132us; 136us; 1us; 129us; 1us; 129us; 2us; 130us; 131us; 1us; 130us; 1us; 130us; 1us; 130us; 2us; 132us; 136us; 1us; 133us; 1us; 134us; 1us; 135us; 1us; 136us; 1us; 136us; 1us; 137us; 1us; 138us; 3us; 138us; 157us; 158us; 1us; 138us; 1us; 138us; 2us; 139us; 140us; 1us; 140us; 3us; 141us; 142us; 143us; 1us; 142us; 1us; 143us; 3us; 144us; 145us; 146us; 2us; 144us; 146us; 2us; 144us; 146us; 1us; 145us; 1us; 146us; 3us; 147us; 148us; 149us; 2us; 147us; 149us; 2us; 147us; 149us; 1us; 148us; 1us; 149us; 1us; 150us; 1us; 151us; 1us; 152us; 1us; 153us; 1us; 154us; 1us; 155us; 1us; 156us; 1us; 156us; 1us; 158us; 1us; 158us; 1us; 159us; 1us; 160us; 1us; 160us; 1us; 160us; 1us; 160us; 1us; 161us; 1us; 162us; 1us; 163us; 1us; 164us; 1us; 165us; 1us; 166us; 1us; 167us; 1us; 167us; 1us; 167us; 1us; 167us; 1us; 168us; 1us; 168us; 1us; 168us; 1us; 168us; 1us; 169us; 1us; 169us; 1us; 169us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 170us; 1us; 170us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 172us; 1us; 172us; 1us; 173us; 2us; 174us; 175us; 1us; 175us; 1us; 175us; 2us; 176us; 178us; 1us; 177us; 1us; 178us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 102us; 104us; 107us; 109us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 136us; 141us; 143us; 145us; 148us; 151us; 154us; 156us; 158us; 160us; 162us; 164us; 166us; 168us; 170us; 173us; 175us; 177us; 179us; 181us; 183us; 185us; 188us; 190us; 192us; 195us; 197us; 199us; 201us; 203us; 205us; 207us; 209us; 211us; 214us; 216us; 219us; 221us; 223us; 225us; 227us; 229us; 231us; 234us; 236us; 238us; 241us; 244us; 246us; 248us; 250us; 252us; 254us; 256us; 258us; 260us; 263us; 265us; 267us; 269us; 271us; 273us; 275us; 277us; 279us; 281us; 284us; 287us; 290us; 293us; 295us; 297us; 299us; 301us; 303us; 305us; 307us; 309us; 311us; 313us; 315us; 317us; 319us; 321us; 323us; 325us; 327us; 329us; 331us; 333us; 335us; 337us; 339us; 341us; 343us; 345us; 347us; 349us; 351us; 353us; 355us; 357us; 359us; 361us; 363us; 365us; 367us; 369us; 371us; 373us; 375us; 377us; 379us; 382us; 385us; 388us; 391us; 394us; 397us; 399us; 401us; 403us; 405us; 407us; 409us; 411us; 413us; 415us; 418us; 420us; 422us; 424us; 426us; 428us; 430us; 432us; 434us; 436us; 439us; 442us; 445us; 447us; 449us; 451us; 453us; 455us; 457us; 460us; 462us; 464us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 507us; 510us; 512us; 514us; 516us; 518us; 520us; 523us; 526us; 528us; 530us; 532us; 534us; 536us; 539us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 567us; 570us; 572us; 574us; 576us; 578us; 580us; 583us; 586us; 588us; 590us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; 606us; 608us; 610us; 612us; 614us; 616us; 618us; 620us; 622us; 625us; 627us; 629us; 631us; 633us; 635us; 637us; 639us; 641us; 643us; 647us; 649us; 651us; 654us; 656us; 658us; 660us; 663us; 665us; 667us; 669us; 671us; 673us; 675us; 677us; 681us; 683us; 685us; 688us; 690us; 694us; 696us; 698us; 702us; 705us; 708us; 710us; 712us; 716us; 719us; 722us; 724us; 726us; 728us; 730us; 732us; 734us; 736us; 738us; 740us; 742us; 744us; 746us; 748us; 750us; 752us; 754us; 756us; 758us; 760us; 762us; 764us; 766us; 768us; 770us; 772us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 792us; 794us; 796us; 798us; 800us; 802us; 804us; 806us; 808us; 810us; 812us; 814us; 816us; 818us; 821us; 823us; 825us; 828us; 830us; |]
let _fsyacc_action_rows = 381
let _fsyacc_actionTableElements = [|1us; 16387us; 58us; 15us; 0us; 49152us; 5us; 16389us; 33us; 62us; 45us; 90us; 51us; 52us; 52us; 47us; 53us; 79us; 2us; 32768us; 54us; 12us; 55us; 36us; 1us; 32768us; 91us; 5us; 0us; 16385us; 1us; 32768us; 91us; 7us; 0us; 16386us; 1us; 16387us; 58us; 15us; 0us; 16388us; 5us; 16389us; 33us; 62us; 45us; 90us; 51us; 52us; 52us; 47us; 53us; 79us; 0us; 16390us; 1us; 32768us; 61us; 13us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16391us; 3us; 32768us; 78us; 38us; 84us; 23us; 90us; 25us; 1us; 32768us; 57us; 17us; 1us; 32768us; 90us; 18us; 0us; 16392us; 2us; 32768us; 84us; 23us; 90us; 25us; 1us; 32768us; 57us; 21us; 1us; 32768us; 90us; 22us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 1us; 32768us; 65us; 26us; 1us; 32768us; 90us; 27us; 1us; 32768us; 65us; 28us; 1us; 32768us; 90us; 29us; 1us; 32768us; 68us; 30us; 1us; 32768us; 86us; 31us; 1us; 32768us; 65us; 32us; 1us; 32768us; 86us; 33us; 1us; 32768us; 65us; 34us; 1us; 32768us; 86us; 35us; 0us; 16396us; 1us; 32768us; 78us; 38us; 0us; 16397us; 3us; 16399us; 87us; 45us; 89us; 44us; 90us; 43us; 1us; 32768us; 79us; 40us; 0us; 16398us; 3us; 16399us; 87us; 45us; 89us; 44us; 90us; 43us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 3us; 32768us; 33us; 62us; 53us; 79us; 78us; 49us; 0us; 16405us; 2us; 32768us; 33us; 62us; 53us; 79us; 1us; 32768us; 79us; 51us; 0us; 16406us; 1us; 32768us; 89us; 53us; 1us; 16482us; 90us; 196us; 1us; 32768us; 61us; 55us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 0us; 16407us; 0us; 16408us; 0us; 16409us; 1us; 32768us; 79us; 60us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 90us; 63us; 18us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 61us; 64us; 80us; 340us; 82us; 66us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16412us; 1us; 16482us; 90us; 196us; 1us; 32768us; 83us; 68us; 17us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 61us; 69us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16413us; 1us; 32768us; 61us; 72us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16414us; 1us; 32768us; 61us; 75us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16415us; 1us; 16416us; 33us; 62us; 0us; 16417us; 1us; 32768us; 89us; 80us; 1us; 16482us; 90us; 196us; 1us; 32768us; 61us; 82us; 1us; 32768us; 89us; 86us; 0us; 16418us; 1us; 16419us; 53us; 79us; 0us; 16420us; 0us; 16421us; 1us; 16422us; 63us; 88us; 1us; 32768us; 89us; 86us; 0us; 16423us; 1us; 32768us; 88us; 91us; 1us; 16482us; 90us; 196us; 1us; 32768us; 78us; 93us; 1us; 32768us; 88us; 98us; 1us; 32768us; 79us; 95us; 0us; 16424us; 1us; 16425us; 88us; 98us; 0us; 16426us; 1us; 16427us; 82us; 99us; 1us; 16482us; 90us; 196us; 1us; 32768us; 83us; 101us; 0us; 16428us; 38us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 34us; 120us; 35us; 108us; 52us; 113us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 79us; 104us; 0us; 16429us; 1us; 16430us; 71us; 106us; 38us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 34us; 120us; 35us; 108us; 52us; 113us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16431us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 1us; 16432us; 61us; 110us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16433us; 0us; 16434us; 1us; 32768us; 78us; 114us; 1us; 32768us; 34us; 120us; 1us; 32768us; 79us; 116us; 0us; 16435us; 0us; 16436us; 1us; 16437us; 34us; 120us; 0us; 16438us; 1us; 32768us; 33us; 121us; 1us; 32768us; 90us; 122us; 1us; 32768us; 61us; 123us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16439us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16441us; 1us; 32768us; 70us; 132us; 2us; 32768us; 24us; 236us; 70us; 132us; 2us; 32768us; 24us; 243us; 70us; 132us; 2us; 32768us; 24us; 250us; 70us; 132us; 2us; 32768us; 24us; 261us; 70us; 132us; 37us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 77us; 16442us; 78us; 102us; 79us; 16442us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 0us; 16446us; 0us; 16447us; 0us; 16448us; 0us; 16449us; 0us; 16450us; 0us; 16451us; 0us; 16452us; 0us; 16453us; 0us; 16454us; 0us; 16455us; 0us; 16456us; 1us; 32768us; 90us; 148us; 0us; 16457us; 1us; 32768us; 90us; 150us; 0us; 16458us; 1us; 32768us; 90us; 152us; 0us; 16459us; 0us; 16460us; 1us; 32768us; 90us; 155us; 0us; 16461us; 0us; 16462us; 1us; 32768us; 78us; 102us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 4us; 32768us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 1us; 16482us; 90us; 196us; 1us; 32768us; 78us; 102us; 0us; 16476us; 1us; 16482us; 90us; 196us; 1us; 32768us; 78us; 102us; 1us; 32768us; 24us; 178us; 1us; 32768us; 78us; 179us; 4us; 16484us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 2us; 32768us; 25us; 190us; 79us; 184us; 1us; 32768us; 71us; 182us; 1us; 32768us; 79us; 183us; 0us; 16477us; 0us; 16478us; 1us; 16482us; 90us; 196us; 1us; 32768us; 73us; 187us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 71us; 189us; 0us; 16479us; 17us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 73us; 191us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16480us; 1us; 32768us; 73us; 194us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16481us; 1us; 16482us; 90us; 196us; 0us; 16483us; 4us; 16484us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16485us; 1us; 32768us; 78us; 201us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 2us; 32768us; 21us; 204us; 79us; 203us; 0us; 16486us; 1us; 32768us; 73us; 205us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 71us; 207us; 1us; 32768us; 79us; 208us; 0us; 16487us; 16us; 16488us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 0us; 16489us; 1us; 32768us; 73us; 212us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 71us; 214us; 0us; 16490us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 20us; 217us; 1us; 32768us; 78us; 102us; 1us; 32768us; 21us; 219us; 1us; 32768us; 78us; 102us; 0us; 16491us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 20us; 223us; 1us; 32768us; 78us; 102us; 0us; 16492us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 20us; 227us; 1us; 32768us; 78us; 102us; 0us; 16493us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 81us; 231us; 0us; 16494us; 1us; 32768us; 76us; 233us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 77us; 16442us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 77us; 235us; 0us; 16495us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 77us; 16442us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 77us; 238us; 0us; 16496us; 1us; 32768us; 76us; 240us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 77us; 16442us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 77us; 242us; 0us; 16497us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 77us; 16442us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 77us; 245us; 0us; 16498us; 1us; 32768us; 76us; 247us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 77us; 16442us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 77us; 249us; 0us; 16499us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 77us; 16442us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 77us; 252us; 0us; 16500us; 1us; 32768us; 76us; 254us; 2us; 32768us; 86us; 378us; 90us; 379us; 1us; 32768us; 62us; 256us; 2us; 32768us; 86us; 378us; 90us; 379us; 1us; 32768us; 77us; 258us; 0us; 16501us; 1us; 32768us; 78us; 260us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 79us; 16442us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 79us; 16442us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 79us; 263us; 0us; 16502us; 1us; 32768us; 79us; 265us; 0us; 16503us; 1us; 32768us; 78us; 267us; 36us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 79us; 16511us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 296us; 1us; 32768us; 24us; 269us; 1us; 16511us; 90us; 295us; 1us; 32768us; 79us; 271us; 0us; 16504us; 1us; 32768us; 79us; 273us; 0us; 16505us; 1us; 32768us; 78us; 275us; 1us; 32768us; 90us; 295us; 1us; 32768us; 79us; 277us; 0us; 16506us; 1us; 32768us; 78us; 279us; 1us; 32768us; 90us; 288us; 1us; 32768us; 21us; 281us; 1us; 32768us; 73us; 282us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 71us; 284us; 1us; 32768us; 79us; 285us; 0us; 16507us; 1us; 16508us; 90us; 288us; 0us; 16509us; 1us; 32768us; 73us; 289us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 1us; 32768us; 71us; 291us; 0us; 16510us; 1us; 32768us; 70us; 293us; 1us; 16511us; 90us; 295us; 0us; 16512us; 1us; 32768us; 61us; 297us; 2us; 16516us; 61us; 297us; 69us; 307us; 35us; 16440us; 1us; 166us; 2us; 167us; 3us; 232us; 4us; 239us; 5us; 246us; 6us; 253us; 7us; 259us; 8us; 278us; 9us; 266us; 10us; 274us; 17us; 215us; 18us; 221us; 19us; 225us; 22us; 165us; 23us; 200us; 26us; 175us; 27us; 163us; 28us; 162us; 29us; 161us; 30us; 160us; 31us; 157us; 32us; 172us; 64us; 154us; 66us; 147us; 67us; 149us; 75us; 151us; 78us; 102us; 80us; 229us; 84us; 170us; 85us; 169us; 86us; 168us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16513us; 1us; 16515us; 82us; 300us; 2us; 32768us; 86us; 378us; 90us; 379us; 1us; 32768us; 83us; 302us; 0us; 16514us; 1us; 16516us; 69us; 307us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 4us; 32768us; 87us; 306us; 88us; 305us; 89us; 304us; 90us; 303us; 0us; 16520us; 0us; 16521us; 1us; 32768us; 69us; 312us; 2us; 16541us; 0us; 337us; 69us; 312us; 2us; 32768us; 89us; 309us; 90us; 310us; 0us; 16522us; 16us; 16523us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 0us; 16524us; 17us; 16525us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 62us; 317us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 0us; 16526us; 0us; 16527us; 2us; 32768us; 61us; 320us; 62us; 322us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 1us; 16528us; 90us; 319us; 0us; 16529us; 0us; 16530us; 2us; 32768us; 61us; 325us; 62us; 327us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 16us; 16531us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 0us; 16532us; 0us; 16533us; 0us; 16534us; 0us; 16535us; 0us; 16536us; 0us; 16537us; 0us; 16538us; 0us; 16539us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 0us; 16540us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 0us; 16542us; 0us; 16543us; 2us; 32768us; 89us; 309us; 90us; 310us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 1us; 32768us; 81us; 343us; 0us; 16544us; 0us; 16545us; 0us; 16546us; 0us; 16547us; 0us; 16548us; 0us; 16549us; 0us; 16550us; 1us; 32768us; 78us; 351us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 1us; 32768us; 79us; 353us; 0us; 16551us; 1us; 32768us; 78us; 355us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 1us; 32768us; 79us; 357us; 0us; 16552us; 1us; 32768us; 78us; 359us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 1us; 32768us; 79us; 361us; 0us; 16553us; 1us; 32768us; 78us; 363us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 1us; 32768us; 79us; 365us; 0us; 16554us; 1us; 32768us; 78us; 367us; 1us; 32768us; 90us; 319us; 1us; 32768us; 79us; 369us; 0us; 16555us; 1us; 32768us; 78us; 371us; 16us; 32768us; 1us; 329us; 2us; 330us; 3us; 350us; 4us; 354us; 5us; 358us; 6us; 362us; 7us; 370us; 9us; 366us; 59us; 335us; 60us; 334us; 80us; 340us; 84us; 333us; 85us; 332us; 86us; 331us; 89us; 309us; 90us; 311us; 1us; 32768us; 79us; 373us; 0us; 16556us; 0us; 16557us; 1us; 16558us; 66us; 376us; 2us; 32768us; 86us; 378us; 90us; 379us; 0us; 16559us; 1us; 16560us; 90us; 380us; 0us; 16561us; 0us; 16562us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 9us; 12us; 14us; 15us; 17us; 18us; 20us; 21us; 27us; 28us; 30us; 66us; 67us; 71us; 73us; 75us; 76us; 79us; 81us; 83us; 84us; 85us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 107us; 109us; 110us; 114us; 116us; 117us; 121us; 122us; 123us; 124us; 125us; 126us; 130us; 131us; 134us; 136us; 137us; 139us; 141us; 143us; 160us; 161us; 162us; 163us; 165us; 166us; 167us; 169us; 188us; 224us; 225us; 227us; 229us; 247us; 283us; 284us; 286us; 322us; 323us; 325us; 361us; 362us; 364us; 365us; 367us; 369us; 371us; 373us; 374us; 376us; 377us; 378us; 380us; 382us; 383us; 385us; 387us; 389us; 391us; 393us; 394us; 396us; 397us; 399us; 401us; 403us; 404us; 443us; 445us; 446us; 448us; 487us; 488us; 505us; 507us; 543us; 544us; 545us; 547us; 549us; 551us; 552us; 553us; 555us; 556us; 558us; 560us; 562us; 598us; 599us; 635us; 636us; 638us; 641us; 644us; 647us; 650us; 688us; 689us; 690us; 691us; 692us; 693us; 694us; 695us; 696us; 697us; 698us; 699us; 700us; 701us; 702us; 704us; 705us; 707us; 708us; 710us; 711us; 712us; 714us; 715us; 716us; 718us; 719us; 720us; 721us; 722us; 723us; 728us; 729us; 730us; 731us; 732us; 733us; 734us; 735us; 736us; 738us; 740us; 741us; 743us; 745us; 747us; 749us; 754us; 757us; 759us; 761us; 762us; 763us; 765us; 767us; 803us; 805us; 806us; 824us; 860us; 861us; 863us; 899us; 900us; 902us; 903us; 908us; 909us; 911us; 928us; 931us; 932us; 934us; 970us; 972us; 974us; 975us; 992us; 993us; 995us; 1031us; 1033us; 1034us; 1070us; 1072us; 1074us; 1076us; 1078us; 1079us; 1115us; 1117us; 1119us; 1120us; 1156us; 1158us; 1160us; 1161us; 1197us; 1199us; 1200us; 1202us; 1239us; 1241us; 1242us; 1279us; 1281us; 1282us; 1284us; 1321us; 1323us; 1324us; 1361us; 1363us; 1364us; 1366us; 1403us; 1405us; 1406us; 1443us; 1445us; 1446us; 1448us; 1451us; 1453us; 1456us; 1458us; 1459us; 1461us; 1498us; 1535us; 1537us; 1538us; 1540us; 1541us; 1543us; 1580us; 1582us; 1584us; 1586us; 1587us; 1589us; 1590us; 1592us; 1594us; 1596us; 1597us; 1599us; 1601us; 1603us; 1605us; 1641us; 1643us; 1645us; 1646us; 1648us; 1649us; 1651us; 1687us; 1689us; 1690us; 1692us; 1694us; 1695us; 1697us; 1700us; 1736us; 1737us; 1739us; 1742us; 1744us; 1745us; 1747us; 1748us; 1749us; 1750us; 1755us; 1756us; 1757us; 1759us; 1762us; 1765us; 1766us; 1783us; 1784us; 1802us; 1803us; 1804us; 1807us; 1824us; 1826us; 1827us; 1828us; 1831us; 1848us; 1865us; 1866us; 1867us; 1868us; 1869us; 1870us; 1871us; 1872us; 1873us; 1890us; 1891us; 1908us; 1909us; 1910us; 1913us; 1930us; 1932us; 1933us; 1934us; 1935us; 1936us; 1937us; 1938us; 1939us; 1941us; 1958us; 1960us; 1961us; 1963us; 1980us; 1982us; 1983us; 1985us; 2002us; 2004us; 2005us; 2007us; 2024us; 2026us; 2027us; 2029us; 2031us; 2033us; 2034us; 2036us; 2053us; 2055us; 2056us; 2057us; 2059us; 2062us; 2063us; 2065us; 2066us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 5us; 1us; 2us; 4us; 1us; 4us; 7us; 5us; 8us; 1us; 2us; 5us; 1us; 2us; 1us; 1us; 3us; 6us; 1us; 2us; 1us; 4us; 3us; 1us; 3us; 2us; 4us; 1us; 4us; 1us; 1us; 2us; 5us; 0us; 2us; 0us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 9us; 7us; 5us; 3us; 4us; 0us; 2us; 0us; 2us; 4us; 8us; 1us; 2us; 4us; 6us; 4us; 4us; 3us; 4us; 6us; 4us; 6us; 4us; 6us; 6us; 6us; 4us; 6us; 4us; 4us; 8us; 1us; 2us; 4us; 0us; 3us; 3us; 4us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 2us; 1us; 2us; 2us; 3us; 2us; 4us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 4us; 4us; 4us; 4us; 1us; 1us; 3us; 1us; 1us; 2us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 16us; 16us; 17us; 18us; 18us; 19us; 20us; 20us; 21us; 21us; 22us; 23us; 23us; 24us; 24us; 24us; 24us; 24us; 25us; 25us; 26us; 27us; 27us; 28us; 28us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 30us; 31us; 31us; 32us; 33us; 33us; 34us; 34us; 35us; 35us; 36us; 36us; 37us; 37us; 38us; 39us; 40us; 41us; 42us; 43us; 43us; 44us; 44us; 45us; 45us; 46us; 47us; 47us; 48us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 53us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 59us; 59us; 59us; 60us; 60us; 60us; 61us; 61us; 61us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 71us; 71us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 16394us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 16398us; 65535us; 16400us; 16401us; 16402us; 16403us; 16404us; 65535us; 16405us; 65535us; 65535us; 16406us; 65535us; 65535us; 65535us; 65535us; 16407us; 16408us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 16414us; 65535us; 65535us; 16415us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 16420us; 16421us; 65535us; 65535us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 16424us; 65535us; 16426us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 16429us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 16433us; 16434us; 65535us; 65535us; 65535us; 16435us; 16436us; 65535us; 16438us; 65535us; 65535us; 65535us; 65535us; 16439us; 65535us; 16441us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16443us; 16444us; 16445us; 16446us; 16447us; 16448us; 16449us; 16450us; 16451us; 16452us; 16453us; 16454us; 16455us; 16456us; 65535us; 16457us; 65535us; 16458us; 65535us; 16459us; 16460us; 65535us; 16461us; 16462us; 65535us; 16463us; 16464us; 16465us; 16466us; 16467us; 65535us; 16468us; 16469us; 16470us; 16471us; 16472us; 16473us; 16474us; 16475us; 65535us; 65535us; 16476us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16477us; 16478us; 65535us; 65535us; 65535us; 65535us; 16479us; 65535us; 65535us; 16480us; 65535us; 65535us; 16481us; 65535us; 16483us; 65535us; 16485us; 65535us; 65535us; 65535us; 16486us; 65535us; 65535us; 65535us; 65535us; 16487us; 65535us; 16489us; 65535us; 65535us; 65535us; 16490us; 65535us; 65535us; 65535us; 65535us; 65535us; 16491us; 65535us; 65535us; 65535us; 16492us; 65535us; 65535us; 65535us; 16493us; 65535us; 65535us; 16494us; 65535us; 65535us; 65535us; 16495us; 65535us; 65535us; 16496us; 65535us; 65535us; 65535us; 16497us; 65535us; 65535us; 16498us; 65535us; 65535us; 65535us; 16499us; 65535us; 65535us; 16500us; 65535us; 65535us; 65535us; 65535us; 65535us; 16501us; 65535us; 65535us; 65535us; 65535us; 16502us; 65535us; 16503us; 65535us; 65535us; 65535us; 65535us; 65535us; 16504us; 65535us; 16505us; 65535us; 65535us; 65535us; 16506us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16507us; 65535us; 16509us; 65535us; 65535us; 65535us; 16510us; 65535us; 65535us; 16512us; 65535us; 65535us; 65535us; 16513us; 65535us; 65535us; 65535us; 16514us; 65535us; 16517us; 16518us; 16519us; 65535us; 16520us; 16521us; 65535us; 65535us; 65535us; 16522us; 65535us; 16524us; 65535us; 16526us; 16527us; 65535us; 65535us; 65535us; 16529us; 16530us; 65535us; 65535us; 65535us; 16532us; 16533us; 16534us; 16535us; 16536us; 16537us; 16538us; 16539us; 65535us; 16540us; 65535us; 16542us; 16543us; 65535us; 65535us; 65535us; 16544us; 16545us; 16546us; 16547us; 16548us; 16549us; 16550us; 65535us; 65535us; 65535us; 16551us; 65535us; 65535us; 65535us; 16552us; 65535us; 65535us; 65535us; 16553us; 65535us; 65535us; 65535us; 16554us; 65535us; 65535us; 65535us; 16555us; 65535us; 65535us; 65535us; 16556us; 16557us; 65535us; 65535us; 16559us; 65535us; 16561us; 16562us; |]
let _fsyacc_reductions ()  =    [| 
# 864 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 873 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "./Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 84 "./Parser.fsy"
                 :  Unit ));
# 886 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "./Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 85 "./Parser.fsy"
                 :  Unit ));
# 899 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "./Parser.fsy"
                                          [] 
                   )
# 87 "./Parser.fsy"
                 : 'gentype_import_list));
# 909 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "./Parser.fsy"
                                                  _1 :: _2 
                   )
# 88 "./Parser.fsy"
                 : 'gentype_import_list));
# 921 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "./Parser.fsy"
                                         [] 
                   )
# 90 "./Parser.fsy"
                 : 'gentype_decl_list));
# 931 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "./Parser.fsy"
                                                   _1 :: _2 
                   )
# 91 "./Parser.fsy"
                 : 'gentype_decl_list));
# 943 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "./Parser.fsy"
                                                      _3 
                   )
# 93 "./Parser.fsy"
                 : 'gentype_main));
# 954 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "./Parser.fsy"
                                                                    { Explicit = []; Path = _2; Alias = _4 } 
                   )
# 95 "./Parser.fsy"
                 : 'gentype_import));
# 966 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "./Parser.fsy"
                                                                          { Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 96 "./Parser.fsy"
                 : 'gentype_import));
# 979 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "./Parser.fsy"
                                            IPLocal (_1) 
                   )
# 98 "./Parser.fsy"
                 : 'gentype_import_path));
# 990 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "./Parser.fsy"
                                   IPRemote (_1) 
                   )
# 99 "./Parser.fsy"
                 : 'gentype_import_path));
# 1001 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "./Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 102 "./Parser.fsy"
                 : 'gentype_remote));
# 1017 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "./Parser.fsy"
                                                   _2 
                   )
# 104 "./Parser.fsy"
                 : 'gentype_export));
# 1028 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "./Parser.fsy"
                                                               _2 
                   )
# 106 "./Parser.fsy"
                 : 'gentype_brace_names));
# 1039 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "./Parser.fsy"
                                       [] 
                   )
# 108 "./Parser.fsy"
                 : 'gentype_name_list));
# 1049 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "./Parser.fsy"
                                            _1 :: _2 
                   )
# 109 "./Parser.fsy"
                 : 'gentype_name_list));
# 1061 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "./Parser.fsy"
                                          _1 
                   )
# 111 "./Parser.fsy"
                 : 'gentype_name));
# 1072 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "./Parser.fsy"
                                         _1 
                   )
# 112 "./Parser.fsy"
                 : 'gentype_name));
# 1083 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "./Parser.fsy"
                                          _1 
                   )
# 113 "./Parser.fsy"
                 : 'gentype_name));
# 1094 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "./Parser.fsy"
                                                        DFunc (_1) 
                   )
# 117 "./Parser.fsy"
                 : 'gentype_declaration));
# 1105 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "./Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 118 "./Parser.fsy"
                 : 'gentype_declaration));
# 1116 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "./Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 119 "./Parser.fsy"
                 : 'gentype_declaration));
# 1127 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "./Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 120 "./Parser.fsy"
                 : 'gentype_declaration));
# 1140 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "./Parser.fsy"
                                               DType (_1) 
                   )
# 121 "./Parser.fsy"
                 : 'gentype_declaration));
# 1151 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "./Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 122 "./Parser.fsy"
                 : 'gentype_declaration));
# 1162 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "./Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 123 "./Parser.fsy"
                 : 'gentype_declaration));
# 1173 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "./Parser.fsy"
                                             DEffect (_1) 
                   )
# 124 "./Parser.fsy"
                 : 'gentype_declaration));
# 1184 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "./Parser.fsy"
                          { Name = _2; FixedParams = []; Body = _4 } 
                   )
# 127 "./Parser.fsy"
                 : 'gentype_function));
# 1196 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_param_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "./Parser.fsy"
                           { Name = _2; FixedParams = _4; Body = _7 } 
                   )
# 129 "./Parser.fsy"
                 : 'gentype_function));
# 1209 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "./Parser.fsy"
                           { Name = _2; FixedParams = []; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 131 "./Parser.fsy"
                 : 'gentype_function));
# 1222 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_param_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_no_dot_pattern_expr_list in
            let _8 = parseState.GetInput(8) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "./Parser.fsy"
                           { Name = _2; FixedParams = _4; Body = [EStatementBlock([SLet { Matcher = _6; Body = [] }; SExpression(_8)])] } 
                   )
# 133 "./Parser.fsy"
                 : 'gentype_function));
# 1236 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "./Parser.fsy"
                                                   [_1] 
                   )
# 135 "./Parser.fsy"
                 : 'gentype_function_list));
# 1247 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "./Parser.fsy"
                                                     _1 :: _2 
                   )
# 136 "./Parser.fsy"
                 : 'gentype_function_list));
# 1259 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "./Parser.fsy"
                                                                                   { Name = _2; Params = _3; Constructors = _5 } 
                   )
# 138 "./Parser.fsy"
                 : 'gentype_datatype));
# 1272 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "./Parser.fsy"
                                                   [_1] 
                   )
# 140 "./Parser.fsy"
                 : 'gentype_datatype_list));
# 1283 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "./Parser.fsy"
                                                     _1 :: _2 
                   )
# 141 "./Parser.fsy"
                 : 'gentype_datatype_list));
# 1295 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "./Parser.fsy"
                                              { Name = _1; Components = [] } 
                   )
# 143 "./Parser.fsy"
                 : 'gentype_constructor));
# 1306 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "./Parser.fsy"
                                                           [_1] 
                   )
# 145 "./Parser.fsy"
                 : 'gentype_constructor_list));
# 1317 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "./Parser.fsy"
                                                               _1 :: _3 
                   )
# 146 "./Parser.fsy"
                 : 'gentype_constructor_list));
# 1329 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "./Parser.fsy"
                          { Name = _2; Params = _3; Handlers = _5 } 
                   )
# 149 "./Parser.fsy"
                 : 'gentype_effect));
# 1342 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "./Parser.fsy"
                                                                     [_1] 
                   )
# 151 "./Parser.fsy"
                 : 'gentype_handler_template_list));
# 1353 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "./Parser.fsy"
                                                                       _1 :: _2 
                   )
# 152 "./Parser.fsy"
                 : 'gentype_handler_template_list));
# 1365 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "./Parser.fsy"
                            { Name = _1; FixedParams = []; Type = { Context = []; Head = TFixedConst 1 } } 
                   )
# 155 "./Parser.fsy"
                 : 'gentype_handler_template));
# 1376 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "./Parser.fsy"
                             { Name = _1; FixedParams = _3; Type = { Context = []; Head = TFixedConst 1 } } 
                   )
# 157 "./Parser.fsy"
                 : 'gentype_handler_template));
# 1388 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "./Parser.fsy"
                                                                                  _2 
                   )
# 161 "./Parser.fsy"
                 : 'gentype_term_statement_block));
# 1399 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "./Parser.fsy"
                                                                   [_1] 
                   )
# 163 "./Parser.fsy"
                 : 'gentype_term_statement_list));
# 1410 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "./Parser.fsy"
                                                                            _1 :: _3 
                   )
# 164 "./Parser.fsy"
                 : 'gentype_term_statement_list));
# 1422 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "./Parser.fsy"
                                                                          SLet { Matcher = _2; Body = [] } 
                   )
# 166 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1433 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "./Parser.fsy"
                                                                               SLet { Matcher = _2; Body = _4 } 
                   )
# 167 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1445 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "./Parser.fsy"
                                                       SLocals ([_1]) 
                   )
# 168 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1456 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_local_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "./Parser.fsy"
                                                                              SLocals (_3) 
                   )
# 169 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1467 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "./Parser.fsy"
                                                    SExpression (_1) 
                   )
# 170 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1478 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "./Parser.fsy"
                                                                 [_1] 
                   )
# 172 "./Parser.fsy"
                 : 'gentype_local_function_list));
# 1489 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_local_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "./Parser.fsy"
                                                                 _1 :: _2 
                   )
# 173 "./Parser.fsy"
                 : 'gentype_local_function_list));
# 1501 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "./Parser.fsy"
                                                                                     { Name = _3; Body = _5 } 
                   )
# 175 "./Parser.fsy"
                 : 'gentype_local_function));
# 1513 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "./Parser.fsy"
                                         [] 
                   )
# 177 "./Parser.fsy"
                 : 'gentype_simple_expr));
# 1523 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "./Parser.fsy"
                                             _1 :: _2 
                   )
# 178 "./Parser.fsy"
                 : 'gentype_simple_expr));
# 1535 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "./Parser.fsy"
                                                   [] 
                   )
# 181 "./Parser.fsy"
                 : 'gentype_simple_expr_list));
# 1545 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "./Parser.fsy"
                                                                 _1 :: _3 
                   )
# 182 "./Parser.fsy"
                 : 'gentype_simple_expr_list));
# 1557 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "./Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 186 "./Parser.fsy"
                 : 'gentype_word));
# 1568 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "./Parser.fsy"
                                            _1 
                   )
# 187 "./Parser.fsy"
                 : 'gentype_word));
# 1579 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "./Parser.fsy"
                                           _1 
                   )
# 188 "./Parser.fsy"
                 : 'gentype_word));
# 1590 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "./Parser.fsy"
                                         _1 
                   )
# 189 "./Parser.fsy"
                 : 'gentype_word));
# 1601 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "./Parser.fsy"
                                          _1 
                   )
# 190 "./Parser.fsy"
                 : 'gentype_word));
# 1612 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "./Parser.fsy"
                                           _1 
                   )
# 191 "./Parser.fsy"
                 : 'gentype_word));
# 1623 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "./Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 192 "./Parser.fsy"
                 : 'gentype_word));
# 1634 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "./Parser.fsy"
                                             _1 
                   )
# 193 "./Parser.fsy"
                 : 'gentype_word));
# 1645 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "./Parser.fsy"
                                             _1 
                   )
# 194 "./Parser.fsy"
                 : 'gentype_word));
# 1656 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "./Parser.fsy"
                                              _1 
                   )
# 195 "./Parser.fsy"
                 : 'gentype_word));
# 1667 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "./Parser.fsy"
                                             _1 
                   )
# 196 "./Parser.fsy"
                 : 'gentype_word));
# 1678 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dictionary_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "./Parser.fsy"
                                                 _1 
                   )
# 197 "./Parser.fsy"
                 : 'gentype_word));
# 1689 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "./Parser.fsy"
                                              _1 
                   )
# 198 "./Parser.fsy"
                 : 'gentype_word));
# 1700 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "./Parser.fsy"
                                               EExtension (_2) 
                   )
# 199 "./Parser.fsy"
                 : 'gentype_word));
# 1711 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "./Parser.fsy"
                                                ERestriction (_2) 
                   )
# 200 "./Parser.fsy"
                 : 'gentype_word));
# 1722 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "./Parser.fsy"
                                                 ESelect (_2) 
                   )
# 201 "./Parser.fsy"
                 : 'gentype_word));
# 1733 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "./Parser.fsy"
                                               _1 
                   )
# 203 "./Parser.fsy"
                 : 'gentype_word));
# 1744 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "./Parser.fsy"
                                                   EEmbedding (_2) 
                   )
# 204 "./Parser.fsy"
                 : 'gentype_word));
# 1755 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "./Parser.fsy"
                                          _1 
                   )
# 205 "./Parser.fsy"
                 : 'gentype_word));
# 1766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "./Parser.fsy"
                                                           EWithState (_2) 
                   )
# 206 "./Parser.fsy"
                 : 'gentype_word));
# 1777 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_with_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "./Parser.fsy"
                                               _1 
                   )
# 207 "./Parser.fsy"
                 : 'gentype_word));
# 1788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "./Parser.fsy"
                                         ENewRef 
                   )
# 208 "./Parser.fsy"
                 : 'gentype_word));
# 1798 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "./Parser.fsy"
                                         EGetRef 
                   )
# 209 "./Parser.fsy"
                 : 'gentype_word));
# 1808 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "./Parser.fsy"
                                         EPutRef 
                   )
# 210 "./Parser.fsy"
                 : 'gentype_word));
# 1818 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "./Parser.fsy"
                                                   EUntag (_2) 
                   )
# 211 "./Parser.fsy"
                 : 'gentype_word));
# 1829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "./Parser.fsy"
                                     EDo 
                   )
# 212 "./Parser.fsy"
                 : 'gentype_word));
# 1839 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "./Parser.fsy"
                                       ETrue 
                   )
# 214 "./Parser.fsy"
                 : 'gentype_word));
# 1849 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "./Parser.fsy"
                                       EFalse 
                   )
# 215 "./Parser.fsy"
                 : 'gentype_word));
# 1859 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "./Parser.fsy"
                                         EInteger (_1) 
                   )
# 216 "./Parser.fsy"
                 : 'gentype_word));
# 1870 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "./Parser.fsy"
                                         EDecimal (_1) 
                   )
# 217 "./Parser.fsy"
                 : 'gentype_word));
# 1881 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "./Parser.fsy"
                                        EString (_1) 
                   )
# 218 "./Parser.fsy"
                 : 'gentype_word));
# 1892 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "./Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 219 "./Parser.fsy"
                 : 'gentype_word));
# 1903 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "./Parser.fsy"
                                                                                         EWithPermission (_2, _3) 
                   )
# 221 "./Parser.fsy"
                 : 'gentype_with_permission));
# 1915 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "./Parser.fsy"
                                                                                                                               EHandle (_2, _3, _6, _7) 
                   )
# 223 "./Parser.fsy"
                 : 'gentype_handle_word));
# 1929 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "./Parser.fsy"
                                                                                                         EHandle (_2, _3, _6, []) 
                   )
# 224 "./Parser.fsy"
                 : 'gentype_handle_word));
# 1942 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "./Parser.fsy"
                                                                                    { Name = _1; Params = _2; Body = _4; } 
                   )
# 226 "./Parser.fsy"
                 : 'gentype_handler));
# 1955 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "./Parser.fsy"
                          _3 
                   )
# 229 "./Parser.fsy"
                 : 'gentype_return));
# 1966 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "./Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 231 "./Parser.fsy"
                 : 'gentype_return));
# 1978 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "./Parser.fsy"
                                         [] 
                   )
# 233 "./Parser.fsy"
                 : 'gentype_param_list));
# 1988 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "./Parser.fsy"
                                                     _1 :: _2 
                   )
# 234 "./Parser.fsy"
                 : 'gentype_param_list));
# 2000 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "./Parser.fsy"
                                           [] 
                   )
# 236 "./Parser.fsy"
                 : 'gentype_handler_list));
# 2010 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "./Parser.fsy"
                                                  _1 :: _2 
                   )
# 237 "./Parser.fsy"
                 : 'gentype_handler_list));
# 2022 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "./Parser.fsy"
                                                                                    EMatch (_3, []) 
                   )
# 239 "./Parser.fsy"
                 : 'gentype_match_word));
# 2033 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "./Parser.fsy"
                                                                                                        EMatch (_3, _6) 
                   )
# 240 "./Parser.fsy"
                 : 'gentype_match_word));
# 2045 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "./Parser.fsy"
                                                            [_1] 
                   )
# 242 "./Parser.fsy"
                 : 'gentype_match_clause_list));
# 2056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "./Parser.fsy"
                                                              _1 :: _2 
                   )
# 243 "./Parser.fsy"
                 : 'gentype_match_clause_list));
# 2068 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "./Parser.fsy"
                                                                                     { Matcher = _1; Body = _3 } 
                   )
# 245 "./Parser.fsy"
                 : 'gentype_match_clause));
# 2080 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "./Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 247 "./Parser.fsy"
                 : 'gentype_if_word));
# 2093 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "./Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 249 "./Parser.fsy"
                 : 'gentype_when_word));
# 2105 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "./Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 251 "./Parser.fsy"
                 : 'gentype_while_word));
# 2117 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "./Parser.fsy"
                                                                      _2 
                   )
# 253 "./Parser.fsy"
                 : 'gentype_function_literal));
# 2128 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "./Parser.fsy"
                                                                                      ETupleLiteral ([], _3) 
                   )
# 255 "./Parser.fsy"
                 : 'gentype_tuple_literal));
# 2139 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "./Parser.fsy"
                                                                                          ETupleLiteral (_3, _5) 
                   )
# 256 "./Parser.fsy"
                 : 'gentype_tuple_literal));
# 2151 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "./Parser.fsy"
                                                                                    EListLiteral ([], _3) 
                   )
# 258 "./Parser.fsy"
                 : 'gentype_list_literal));
# 2162 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "./Parser.fsy"
                                                                                        EListLiteral (_3, _5) 
                   )
# 259 "./Parser.fsy"
                 : 'gentype_list_literal));
# 2174 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "./Parser.fsy"
                                                                                        EVectorLiteral ([], _3) 
                   )
# 261 "./Parser.fsy"
                 : 'gentype_vector_literal));
# 2185 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "./Parser.fsy"
                                                                                            EVectorLiteral (_3, _5) 
                   )
# 262 "./Parser.fsy"
                 : 'gentype_vector_literal));
# 2197 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_fixed_size_term_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "./Parser.fsy"
                                                                                                                    ESliceLiteral (_3, _5) 
                   )
# 264 "./Parser.fsy"
                 : 'gentype_slice_literal));
# 2209 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "./Parser.fsy"
                                                                                                         EDictionaryLiteral (_3, _5) 
                   )
# 266 "./Parser.fsy"
                 : 'gentype_dictionary_literal));
# 2221 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "./Parser.fsy"
                                                                                EDictionaryLiteral ([], _3) 
                   )
# 267 "./Parser.fsy"
                 : 'gentype_dictionary_literal));
# 2232 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "./Parser.fsy"
                                                                                           ERecordLiteral (_3, _5) 
                   )
# 269 "./Parser.fsy"
                 : 'gentype_record_literal));
# 2244 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 "./Parser.fsy"
                                                                     ERecordLiteral ([], _3) 
                   )
# 270 "./Parser.fsy"
                 : 'gentype_record_literal));
# 2255 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "./Parser.fsy"
                                                                       EVariantLiteral (_3) 
                   )
# 272 "./Parser.fsy"
                 : 'gentype_variant_literal));
# 2266 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 "./Parser.fsy"
                                                                                                           ECase (_3, _6) 
                   )
# 274 "./Parser.fsy"
                 : 'gentype_case_word));
# 2278 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 "./Parser.fsy"
                                                          [_1] 
                   )
# 276 "./Parser.fsy"
                 :  List<CaseClause> ));
# 2289 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            let _2 = parseState.GetInput(2) :?>  List<CaseClause>  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 "./Parser.fsy"
                                                           _1 :: _2 
                   )
# 277 "./Parser.fsy"
                 :  List<CaseClause> ));
# 2301 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "./Parser.fsy"
                                                                             { Tag = _1; Body = _3 } 
                   )
# 279 "./Parser.fsy"
                 : 'gentype_case_clause));
# 2313 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "./Parser.fsy"
                                         [] 
                   )
# 281 "./Parser.fsy"
                 : 'gentype_field_list));
# 2323 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "./Parser.fsy"
                                                     _1 :: _3 
                   )
# 282 "./Parser.fsy"
                 : 'gentype_field_list));
# 2335 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 284 "./Parser.fsy"
                                                             (_1, _3) 
                   )
# 284 "./Parser.fsy"
                 : 'gentype_field));
# 2347 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 "./Parser.fsy"
                                                                                        { Qualifier = List.take (_1.Length - 1) _1; Name = List.last _1; Size = Some (_3) } 
                   )
# 286 "./Parser.fsy"
                 :  Identifier ));
# 2359 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 "./Parser.fsy"
                                                       { Qualifier = List.take (_1.Length - 1) _1; Name = List.last _1; Size = None } 
                   )
# 287 "./Parser.fsy"
                 :  Identifier ));
# 2370 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 "./Parser.fsy"
                                                          [_1] 
                   )
# 289 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2381 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 "./Parser.fsy"
                                               [_1] 
                   )
# 290 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2392 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "./Parser.fsy"
                                                   [_1] 
                   )
# 291 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2403 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 "./Parser.fsy"
                                                    [_1] 
                   )
# 292 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2414 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 "./Parser.fsy"
                                                                      _1 :: _3 
                   )
# 293 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2426 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 "./Parser.fsy"
                                                        [_1] 
                   )
# 295 "./Parser.fsy"
                 : 'gentype_qualified_ctor));
# 2437 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "./Parser.fsy"
                                                                      _1 :: _3 
                   )
# 296 "./Parser.fsy"
                 : 'gentype_qualified_ctor));
# 2449 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 "./Parser.fsy"
                                                                    ind _1 SEnd 
                   )
# 300 "./Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 2460 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 301 "./Parser.fsy"
                                                               ind _1 _2 
                   )
# 301 "./Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 2472 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 "./Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 303 "./Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2483 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 "./Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 304 "./Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2494 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 "./Parser.fsy"
                                                               ind _1 _2 
                   )
# 305 "./Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2506 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 "./Parser.fsy"
                                                                                ind (_1, _3) SEnd 
                   )
# 307 "./Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2518 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 "./Parser.fsy"
                                                           dot (_1, PWildcard) SEnd 
                   )
# 308 "./Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2529 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 "./Parser.fsy"
                                                                                  ind (_1, _3) _4 
                   )
# 309 "./Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2542 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 "./Parser.fsy"
                                                                                 ind (_1, _3) SEnd 
                   )
# 311 "./Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2554 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 "./Parser.fsy"
                                                             dot (_1, PWildcard) SEnd 
                   )
# 312 "./Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2565 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_dict_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "./Parser.fsy"
                                                                                   ind (_1, _3) _4 
                   )
# 313 "./Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2578 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 "./Parser.fsy"
                                                      PTrue 
                   )
# 315 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2588 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 "./Parser.fsy"
                                             PFalse 
                   )
# 316 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2598 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 "./Parser.fsy"
                                               PInteger (_1) 
                   )
# 317 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2609 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 "./Parser.fsy"
                                               PDecimal (_1) 
                   )
# 318 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2620 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 "./Parser.fsy"
                                              PString (_1) 
                   )
# 319 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2631 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 "./Parser.fsy"
                                                 PWildcard 
                   )
# 320 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2641 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 "./Parser.fsy"
                                                      PRef (_2) 
                   )
# 321 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2652 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 "./Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 322 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2663 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 "./Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 323 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2675 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 "./Parser.fsy"
                                                    PConstructor (_1, SEnd) 
                   )
# 324 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2686 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_ctor in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 "./Parser.fsy"
                                                                              PConstructor (_2, _3) 
                   )
# 325 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2698 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 "./Parser.fsy"
                                                   _1 
                   )
# 326 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2709 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 "./Parser.fsy"
                                                   _1 
                   )
# 327 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2720 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 "./Parser.fsy"
                                                    _1 
                   )
# 328 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2731 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 "./Parser.fsy"
                                                   _1 
                   )
# 329 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2742 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 330 "./Parser.fsy"
                                                    _1 
                   )
# 330 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2753 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dict_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 "./Parser.fsy"
                                                   _1 
                   )
# 331 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2764 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 "./Parser.fsy"
                                                                                 PTuple (_3) 
                   )
# 333 "./Parser.fsy"
                 : 'gentype_tuple_pattern));
# 2775 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 "./Parser.fsy"
                                                                               PList (_3) 
                   )
# 335 "./Parser.fsy"
                 : 'gentype_list_pattern));
# 2786 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 "./Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 337 "./Parser.fsy"
                 : 'gentype_vector_pattern));
# 2797 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 339 "./Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 339 "./Parser.fsy"
                 : 'gentype_slice_pattern));
# 2808 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "./Parser.fsy"
                                                                                   PRecord (_3) 
                   )
# 341 "./Parser.fsy"
                 : 'gentype_record_pattern));
# 2819 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_dict_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 343 "./Parser.fsy"
                                                                                    PDictionary (_3) 
                   )
# 343 "./Parser.fsy"
                 : 'gentype_dict_pattern));
# 2830 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 "./Parser.fsy"
                                                                          _1 
                   )
# 347 "./Parser.fsy"
                 : 'gentype_fixed_size_term_expr));
# 2841 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 "./Parser.fsy"
                                                                                    [_1] 
                   )
# 349 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor_list));
# 2852 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor in
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_factor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 "./Parser.fsy"
                                                                                         _1 :: _3 
                   )
# 350 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor_list));
# 2864 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 "./Parser.fsy"
                                                          FixConst (_1) 
                   )
# 352 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
# 2875 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 "./Parser.fsy"
                                              FixVar (_1) 
                   )
# 353 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
# 2886 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 "./Parser.fsy"
                                                    FixCoeff (_1, _2) 
                   )
# 354 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
|]
# 2899 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 95;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
