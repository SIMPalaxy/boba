// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq


# 13 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | TRUE
  | FALSE
  | TUPLE
  | LIST
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | RECORD
  | VARIANT
  | IF
  | WHEN
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | PUT_REF
  | GET_REF
  | NEW_REF
  | WITH_STATE
  | WITH_PERMISSION
  | FUNCTION
  | LOCAL
  | LET
  | PATTERN
  | RECURSIVE
  | DATA
  | MAIN
  | EXPORT
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | BAR
  | DOUBLE_BAR
  | DOT
  | PLUS
  | MINUS
  | COLON
  | DOUBLE_COLON
  | COMMA
  | SEMICOLON
  | L_BIND
  | R_BIND
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | L_ANGLE
  | R_ANGLE
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_RECORD
    | TOKEN_VARIANT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_PUT_REF
    | TOKEN_GET_REF
    | TOKEN_NEW_REF
    | TOKEN_WITH_STATE
    | TOKEN_WITH_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_DATA
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_BAR
    | TOKEN_DOUBLE_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_L_ANGLE
    | TOKEN_R_ANGLE
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_datatype
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_local_function_list
    | NONTERM_local_function
    | NONTERM_simple_expr
    | NONTERM_simple_expr_list
    | NONTERM_word
    | NONTERM_with_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_function_literal
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_vector_literal
    | NONTERM_slice_literal
    | NONTERM_dictionary_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_qualified_name
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_dict_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern
    | NONTERM_dict_pattern
    | NONTERM_fixed_size_term_expr
    | NONTERM_fixed_size_term_factor_list
    | NONTERM_fixed_size_term_factor

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | TRUE  -> 1 
  | FALSE  -> 2 
  | TUPLE  -> 3 
  | LIST  -> 4 
  | VECTOR  -> 5 
  | SLICE  -> 6 
  | DICTIONARY  -> 7 
  | CASE  -> 8 
  | RECORD  -> 9 
  | VARIANT  -> 10 
  | IF  -> 11 
  | WHEN  -> 12 
  | WHILE  -> 13 
  | THEN  -> 14 
  | ELSE  -> 15 
  | DO  -> 16 
  | MATCH  -> 17 
  | WITH  -> 18 
  | AFTER  -> 19 
  | HANDLE  -> 20 
  | UNTAG  -> 21 
  | PUT_REF  -> 22 
  | GET_REF  -> 23 
  | NEW_REF  -> 24 
  | WITH_STATE  -> 25 
  | WITH_PERMISSION  -> 26 
  | FUNCTION  -> 27 
  | LOCAL  -> 28 
  | LET  -> 29 
  | PATTERN  -> 30 
  | RECURSIVE  -> 31 
  | DATA  -> 32 
  | MAIN  -> 33 
  | EXPORT  -> 34 
  | AS  -> 35 
  | IMPORT  -> 36 
  | REF  -> 37 
  | UNDERSCORE  -> 38 
  | EQUALS  -> 39 
  | ELLIPSIS  -> 40 
  | BAR  -> 41 
  | DOUBLE_BAR  -> 42 
  | DOT  -> 43 
  | PLUS  -> 44 
  | MINUS  -> 45 
  | COLON  -> 46 
  | DOUBLE_COLON  -> 47 
  | COMMA  -> 48 
  | SEMICOLON  -> 49 
  | L_BIND  -> 50 
  | R_BIND  -> 51 
  | L_ARROW  -> 52 
  | R_ARROW  -> 53 
  | L_BRACKET  -> 54 
  | R_BRACKET  -> 55 
  | L_BRACE  -> 56 
  | R_BRACE  -> 57 
  | L_PAREN  -> 58 
  | R_PAREN  -> 59 
  | L_ANGLE  -> 60 
  | R_ANGLE  -> 61 
  | STRING _ -> 62 
  | DECIMAL _ -> 63 
  | INTEGER _ -> 64 
  | PREDICATE_NAME _ -> 65 
  | OPERATOR_NAME _ -> 66 
  | BIG_NAME _ -> 67 
  | SMALL_NAME _ -> 68 
  | EOF  -> 69 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_TRUE 
  | 2 -> TOKEN_FALSE 
  | 3 -> TOKEN_TUPLE 
  | 4 -> TOKEN_LIST 
  | 5 -> TOKEN_VECTOR 
  | 6 -> TOKEN_SLICE 
  | 7 -> TOKEN_DICTIONARY 
  | 8 -> TOKEN_CASE 
  | 9 -> TOKEN_RECORD 
  | 10 -> TOKEN_VARIANT 
  | 11 -> TOKEN_IF 
  | 12 -> TOKEN_WHEN 
  | 13 -> TOKEN_WHILE 
  | 14 -> TOKEN_THEN 
  | 15 -> TOKEN_ELSE 
  | 16 -> TOKEN_DO 
  | 17 -> TOKEN_MATCH 
  | 18 -> TOKEN_WITH 
  | 19 -> TOKEN_AFTER 
  | 20 -> TOKEN_HANDLE 
  | 21 -> TOKEN_UNTAG 
  | 22 -> TOKEN_PUT_REF 
  | 23 -> TOKEN_GET_REF 
  | 24 -> TOKEN_NEW_REF 
  | 25 -> TOKEN_WITH_STATE 
  | 26 -> TOKEN_WITH_PERMISSION 
  | 27 -> TOKEN_FUNCTION 
  | 28 -> TOKEN_LOCAL 
  | 29 -> TOKEN_LET 
  | 30 -> TOKEN_PATTERN 
  | 31 -> TOKEN_RECURSIVE 
  | 32 -> TOKEN_DATA 
  | 33 -> TOKEN_MAIN 
  | 34 -> TOKEN_EXPORT 
  | 35 -> TOKEN_AS 
  | 36 -> TOKEN_IMPORT 
  | 37 -> TOKEN_REF 
  | 38 -> TOKEN_UNDERSCORE 
  | 39 -> TOKEN_EQUALS 
  | 40 -> TOKEN_ELLIPSIS 
  | 41 -> TOKEN_BAR 
  | 42 -> TOKEN_DOUBLE_BAR 
  | 43 -> TOKEN_DOT 
  | 44 -> TOKEN_PLUS 
  | 45 -> TOKEN_MINUS 
  | 46 -> TOKEN_COLON 
  | 47 -> TOKEN_DOUBLE_COLON 
  | 48 -> TOKEN_COMMA 
  | 49 -> TOKEN_SEMICOLON 
  | 50 -> TOKEN_L_BIND 
  | 51 -> TOKEN_R_BIND 
  | 52 -> TOKEN_L_ARROW 
  | 53 -> TOKEN_R_ARROW 
  | 54 -> TOKEN_L_BRACKET 
  | 55 -> TOKEN_R_BRACKET 
  | 56 -> TOKEN_L_BRACE 
  | 57 -> TOKEN_R_BRACE 
  | 58 -> TOKEN_L_PAREN 
  | 59 -> TOKEN_R_PAREN 
  | 60 -> TOKEN_L_ANGLE 
  | 61 -> TOKEN_R_ANGLE 
  | 62 -> TOKEN_STRING 
  | 63 -> TOKEN_DECIMAL 
  | 64 -> TOKEN_INTEGER 
  | 65 -> TOKEN_PREDICATE_NAME 
  | 66 -> TOKEN_OPERATOR_NAME 
  | 67 -> TOKEN_BIG_NAME 
  | 68 -> TOKEN_SMALL_NAME 
  | 69 -> TOKEN_EOF 
  | 72 -> TOKEN_end_of_input
  | 70 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import_path 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_remote 
    | 13 -> NONTERM_export 
    | 14 -> NONTERM_brace_names 
    | 15 -> NONTERM_name_list 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_declaration 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_function 
    | 28 -> NONTERM_function 
    | 29 -> NONTERM_function_list 
    | 30 -> NONTERM_function_list 
    | 31 -> NONTERM_datatype 
    | 32 -> NONTERM_datatype_list 
    | 33 -> NONTERM_datatype_list 
    | 34 -> NONTERM_constructor 
    | 35 -> NONTERM_constructor_list 
    | 36 -> NONTERM_constructor_list 
    | 37 -> NONTERM_term_statement_block 
    | 38 -> NONTERM_term_statement_list 
    | 39 -> NONTERM_term_statement_list 
    | 40 -> NONTERM_term_statement 
    | 41 -> NONTERM_term_statement 
    | 42 -> NONTERM_term_statement 
    | 43 -> NONTERM_term_statement 
    | 44 -> NONTERM_term_statement 
    | 45 -> NONTERM_local_function_list 
    | 46 -> NONTERM_local_function_list 
    | 47 -> NONTERM_local_function 
    | 48 -> NONTERM_simple_expr 
    | 49 -> NONTERM_simple_expr 
    | 50 -> NONTERM_simple_expr_list 
    | 51 -> NONTERM_simple_expr_list 
    | 52 -> NONTERM_word 
    | 53 -> NONTERM_word 
    | 54 -> NONTERM_word 
    | 55 -> NONTERM_word 
    | 56 -> NONTERM_word 
    | 57 -> NONTERM_word 
    | 58 -> NONTERM_word 
    | 59 -> NONTERM_word 
    | 60 -> NONTERM_word 
    | 61 -> NONTERM_word 
    | 62 -> NONTERM_word 
    | 63 -> NONTERM_word 
    | 64 -> NONTERM_word 
    | 65 -> NONTERM_word 
    | 66 -> NONTERM_word 
    | 67 -> NONTERM_word 
    | 68 -> NONTERM_word 
    | 69 -> NONTERM_word 
    | 70 -> NONTERM_word 
    | 71 -> NONTERM_word 
    | 72 -> NONTERM_word 
    | 73 -> NONTERM_word 
    | 74 -> NONTERM_word 
    | 75 -> NONTERM_word 
    | 76 -> NONTERM_word 
    | 77 -> NONTERM_word 
    | 78 -> NONTERM_word 
    | 79 -> NONTERM_word 
    | 80 -> NONTERM_word 
    | 81 -> NONTERM_word 
    | 82 -> NONTERM_word 
    | 83 -> NONTERM_word 
    | 84 -> NONTERM_with_permission 
    | 85 -> NONTERM_handle_word 
    | 86 -> NONTERM_handle_word 
    | 87 -> NONTERM_handler 
    | 88 -> NONTERM_return 
    | 89 -> NONTERM_param_list 
    | 90 -> NONTERM_param_list 
    | 91 -> NONTERM_handler_list 
    | 92 -> NONTERM_handler_list 
    | 93 -> NONTERM_match_word 
    | 94 -> NONTERM_match_word 
    | 95 -> NONTERM_match_clause_list 
    | 96 -> NONTERM_match_clause_list 
    | 97 -> NONTERM_match_clause 
    | 98 -> NONTERM_if_word 
    | 99 -> NONTERM_when_word 
    | 100 -> NONTERM_while_word 
    | 101 -> NONTERM_function_literal 
    | 102 -> NONTERM_tuple_literal 
    | 103 -> NONTERM_tuple_literal 
    | 104 -> NONTERM_list_literal 
    | 105 -> NONTERM_list_literal 
    | 106 -> NONTERM_vector_literal 
    | 107 -> NONTERM_vector_literal 
    | 108 -> NONTERM_slice_literal 
    | 109 -> NONTERM_dictionary_literal 
    | 110 -> NONTERM_dictionary_literal 
    | 111 -> NONTERM_record_literal 
    | 112 -> NONTERM_record_literal 
    | 113 -> NONTERM_variant_literal 
    | 114 -> NONTERM_case_word 
    | 115 -> NONTERM_case_clause_list 
    | 116 -> NONTERM_case_clause_list 
    | 117 -> NONTERM_case_clause 
    | 118 -> NONTERM_field_list 
    | 119 -> NONTERM_field_list 
    | 120 -> NONTERM_field 
    | 121 -> NONTERM_identifier 
    | 122 -> NONTERM_identifier 
    | 123 -> NONTERM_qualified_name 
    | 124 -> NONTERM_qualified_name 
    | 125 -> NONTERM_qualified_name 
    | 126 -> NONTERM_qualified_name 
    | 127 -> NONTERM_pattern_expr_list 
    | 128 -> NONTERM_pattern_expr_list 
    | 129 -> NONTERM_pattern_expr_list 
    | 130 -> NONTERM_field_pattern_list 
    | 131 -> NONTERM_field_pattern_list 
    | 132 -> NONTERM_field_pattern_list 
    | 133 -> NONTERM_dict_pattern_list 
    | 134 -> NONTERM_dict_pattern_list 
    | 135 -> NONTERM_dict_pattern_list 
    | 136 -> NONTERM_pattern_expr 
    | 137 -> NONTERM_pattern_expr 
    | 138 -> NONTERM_pattern_expr 
    | 139 -> NONTERM_pattern_expr 
    | 140 -> NONTERM_pattern_expr 
    | 141 -> NONTERM_pattern_expr 
    | 142 -> NONTERM_pattern_expr 
    | 143 -> NONTERM_pattern_expr 
    | 144 -> NONTERM_pattern_expr 
    | 145 -> NONTERM_pattern_expr 
    | 146 -> NONTERM_pattern_expr 
    | 147 -> NONTERM_pattern_expr 
    | 148 -> NONTERM_pattern_expr 
    | 149 -> NONTERM_pattern_expr 
    | 150 -> NONTERM_pattern_expr 
    | 151 -> NONTERM_pattern_expr 
    | 152 -> NONTERM_tuple_pattern 
    | 153 -> NONTERM_list_pattern 
    | 154 -> NONTERM_vector_pattern 
    | 155 -> NONTERM_slice_pattern 
    | 156 -> NONTERM_record_pattern 
    | 157 -> NONTERM_dict_pattern 
    | 158 -> NONTERM_fixed_size_term_expr 
    | 159 -> NONTERM_fixed_size_term_factor_list 
    | 160 -> NONTERM_fixed_size_term_factor_list 
    | 161 -> NONTERM_fixed_size_term_factor 
    | 162 -> NONTERM_fixed_size_term_factor 
    | 163 -> NONTERM_fixed_size_term_factor 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 72 
let _fsyacc_tagOfErrorTerminal = 70

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | RECORD  -> "RECORD" 
  | VARIANT  -> "VARIANT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | PUT_REF  -> "PUT_REF" 
  | GET_REF  -> "GET_REF" 
  | NEW_REF  -> "NEW_REF" 
  | WITH_STATE  -> "WITH_STATE" 
  | WITH_PERMISSION  -> "WITH_PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | DATA  -> "DATA" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | BAR  -> "BAR" 
  | DOUBLE_BAR  -> "DOUBLE_BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | L_ANGLE  -> "L_ANGLE" 
  | R_ANGLE  -> "R_ANGLE" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | VARIANT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | PUT_REF  -> (null : System.Object) 
  | GET_REF  -> (null : System.Object) 
  | NEW_REF  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | WITH_PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOUBLE_BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | L_ANGLE  -> (null : System.Object) 
  | R_ANGLE  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 24us; 19us; 24us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 36us; 37us; 2us; 65535us; 38us; 39us; 41us; 42us; 2us; 65535us; 38us; 41us; 41us; 41us; 2us; 65535us; 2us; 10us; 10us; 10us; 5us; 65535us; 2us; 46us; 10us; 46us; 47us; 48us; 49us; 70us; 70us; 70us; 2us; 65535us; 49us; 50us; 70us; 71us; 5us; 65535us; 2us; 57us; 10us; 57us; 47us; 58us; 49us; 77us; 77us; 77us; 2us; 65535us; 49us; 59us; 77us; 78us; 2us; 65535us; 75us; 80us; 81us; 80us; 2us; 65535us; 75us; 76us; 81us; 82us; 36us; 65535us; 13us; 115us; 63us; 115us; 68us; 115us; 83us; 115us; 87us; 115us; 91us; 115us; 104us; 115us; 106us; 115us; 113us; 115us; 138us; 139us; 154us; 155us; 157us; 158us; 168us; 115us; 172us; 115us; 183us; 115us; 190us; 115us; 193us; 115us; 195us; 196us; 197us; 198us; 199us; 115us; 201us; 202us; 203us; 115us; 205us; 206us; 207us; 115us; 211us; 115us; 214us; 115us; 218us; 115us; 221us; 115us; 225us; 115us; 228us; 115us; 238us; 115us; 239us; 115us; 245us; 115us; 260us; 115us; 267us; 115us; 275us; 115us; 2us; 65535us; 83us; 84us; 87us; 88us; 2us; 65535us; 83us; 86us; 87us; 86us; 2us; 65535us; 95us; 96us; 99us; 100us; 4us; 65535us; 83us; 93us; 87us; 93us; 95us; 99us; 99us; 99us; 29us; 65535us; 13us; 14us; 63us; 64us; 68us; 69us; 83us; 98us; 87us; 98us; 91us; 92us; 104us; 105us; 106us; 107us; 113us; 108us; 168us; 169us; 172us; 173us; 183us; 184us; 190us; 191us; 193us; 194us; 199us; 200us; 203us; 204us; 207us; 208us; 211us; 109us; 214us; 108us; 218us; 110us; 221us; 108us; 225us; 111us; 228us; 108us; 238us; 112us; 239us; 108us; 245us; 246us; 260us; 261us; 267us; 268us; 275us; 276us; 9us; 65535us; 113us; 114us; 211us; 212us; 214us; 215us; 218us; 219us; 221us; 222us; 225us; 226us; 228us; 229us; 238us; 242us; 239us; 240us; 29us; 65535us; 13us; 106us; 63us; 106us; 68us; 106us; 83us; 106us; 87us; 106us; 91us; 106us; 104us; 106us; 106us; 106us; 113us; 106us; 168us; 106us; 172us; 106us; 183us; 106us; 190us; 106us; 193us; 106us; 199us; 106us; 203us; 106us; 207us; 106us; 211us; 106us; 214us; 106us; 218us; 106us; 221us; 106us; 225us; 106us; 228us; 106us; 238us; 106us; 239us; 106us; 245us; 106us; 260us; 106us; 267us; 106us; 275us; 106us; 29us; 65535us; 13us; 140us; 63us; 140us; 68us; 140us; 83us; 140us; 87us; 140us; 91us; 140us; 104us; 140us; 106us; 140us; 113us; 140us; 168us; 140us; 172us; 140us; 183us; 140us; 190us; 140us; 193us; 140us; 199us; 140us; 203us; 140us; 207us; 140us; 211us; 140us; 214us; 140us; 218us; 140us; 221us; 140us; 225us; 140us; 228us; 140us; 238us; 140us; 239us; 140us; 245us; 140us; 260us; 140us; 267us; 140us; 275us; 140us; 29us; 65535us; 13us; 116us; 63us; 116us; 68us; 116us; 83us; 116us; 87us; 116us; 91us; 116us; 104us; 116us; 106us; 116us; 113us; 116us; 168us; 116us; 172us; 116us; 183us; 116us; 190us; 116us; 193us; 116us; 199us; 116us; 203us; 116us; 207us; 116us; 211us; 116us; 214us; 116us; 218us; 116us; 221us; 116us; 225us; 116us; 228us; 116us; 238us; 116us; 239us; 116us; 245us; 116us; 260us; 116us; 267us; 116us; 275us; 116us; 2us; 65535us; 160us; 176us; 176us; 176us; 1us; 65535us; 161us; 162us; 7us; 65535us; 53us; 54us; 65us; 66us; 73us; 74us; 153us; 154us; 156us; 157us; 166us; 167us; 174us; 175us; 2us; 65535us; 160us; 161us; 176us; 177us; 29us; 65535us; 13us; 117us; 63us; 117us; 68us; 117us; 83us; 117us; 87us; 117us; 91us; 117us; 104us; 117us; 106us; 117us; 113us; 117us; 168us; 117us; 172us; 117us; 183us; 117us; 190us; 117us; 193us; 117us; 199us; 117us; 203us; 117us; 207us; 117us; 211us; 117us; 214us; 117us; 218us; 117us; 221us; 117us; 225us; 117us; 228us; 117us; 238us; 117us; 239us; 117us; 245us; 117us; 260us; 117us; 267us; 117us; 275us; 117us; 2us; 65535us; 179us; 180us; 187us; 188us; 2us; 65535us; 179us; 187us; 187us; 187us; 29us; 65535us; 13us; 118us; 63us; 118us; 68us; 118us; 83us; 118us; 87us; 118us; 91us; 118us; 104us; 118us; 106us; 118us; 113us; 118us; 168us; 118us; 172us; 118us; 183us; 118us; 190us; 118us; 193us; 118us; 199us; 118us; 203us; 118us; 207us; 118us; 211us; 118us; 214us; 118us; 218us; 118us; 221us; 118us; 225us; 118us; 228us; 118us; 238us; 118us; 239us; 118us; 245us; 118us; 260us; 118us; 267us; 118us; 275us; 118us; 29us; 65535us; 13us; 119us; 63us; 119us; 68us; 119us; 83us; 119us; 87us; 119us; 91us; 119us; 104us; 119us; 106us; 119us; 113us; 119us; 168us; 119us; 172us; 119us; 183us; 119us; 190us; 119us; 193us; 119us; 199us; 119us; 203us; 119us; 207us; 119us; 211us; 119us; 214us; 119us; 218us; 119us; 221us; 119us; 225us; 119us; 228us; 119us; 238us; 119us; 239us; 119us; 245us; 119us; 260us; 119us; 267us; 119us; 275us; 119us; 29us; 65535us; 13us; 120us; 63us; 120us; 68us; 120us; 83us; 120us; 87us; 120us; 91us; 120us; 104us; 120us; 106us; 120us; 113us; 120us; 168us; 120us; 172us; 120us; 183us; 120us; 190us; 120us; 193us; 120us; 199us; 120us; 203us; 120us; 207us; 120us; 211us; 120us; 214us; 120us; 218us; 120us; 221us; 120us; 225us; 120us; 228us; 120us; 238us; 120us; 239us; 120us; 245us; 120us; 260us; 120us; 267us; 120us; 275us; 120us; 29us; 65535us; 13us; 121us; 63us; 121us; 68us; 121us; 83us; 121us; 87us; 121us; 91us; 121us; 104us; 121us; 106us; 121us; 113us; 121us; 168us; 121us; 172us; 121us; 183us; 121us; 190us; 121us; 193us; 121us; 199us; 121us; 203us; 121us; 207us; 121us; 211us; 121us; 214us; 121us; 218us; 121us; 221us; 121us; 225us; 121us; 228us; 121us; 238us; 121us; 239us; 121us; 245us; 121us; 260us; 121us; 267us; 121us; 275us; 121us; 29us; 65535us; 13us; 122us; 63us; 122us; 68us; 122us; 83us; 122us; 87us; 122us; 91us; 122us; 104us; 122us; 106us; 122us; 113us; 122us; 168us; 122us; 172us; 122us; 183us; 122us; 190us; 122us; 193us; 122us; 199us; 122us; 203us; 122us; 207us; 122us; 211us; 122us; 214us; 122us; 218us; 122us; 221us; 122us; 225us; 122us; 228us; 122us; 238us; 122us; 239us; 122us; 245us; 122us; 260us; 122us; 267us; 122us; 275us; 122us; 29us; 65535us; 13us; 123us; 63us; 123us; 68us; 123us; 83us; 123us; 87us; 123us; 91us; 123us; 104us; 123us; 106us; 123us; 113us; 123us; 168us; 123us; 172us; 123us; 183us; 123us; 190us; 123us; 193us; 123us; 199us; 123us; 203us; 123us; 207us; 123us; 211us; 123us; 214us; 123us; 218us; 123us; 221us; 123us; 225us; 123us; 228us; 123us; 238us; 123us; 239us; 123us; 245us; 123us; 260us; 123us; 267us; 123us; 275us; 123us; 29us; 65535us; 13us; 124us; 63us; 124us; 68us; 124us; 83us; 124us; 87us; 124us; 91us; 124us; 104us; 124us; 106us; 124us; 113us; 124us; 168us; 124us; 172us; 124us; 183us; 124us; 190us; 124us; 193us; 124us; 199us; 124us; 203us; 124us; 207us; 124us; 211us; 124us; 214us; 124us; 218us; 124us; 221us; 124us; 225us; 124us; 228us; 124us; 238us; 124us; 239us; 124us; 245us; 124us; 260us; 124us; 267us; 124us; 275us; 124us; 29us; 65535us; 13us; 125us; 63us; 125us; 68us; 125us; 83us; 125us; 87us; 125us; 91us; 125us; 104us; 125us; 106us; 125us; 113us; 125us; 168us; 125us; 172us; 125us; 183us; 125us; 190us; 125us; 193us; 125us; 199us; 125us; 203us; 125us; 207us; 125us; 211us; 125us; 214us; 125us; 218us; 125us; 221us; 125us; 225us; 125us; 228us; 125us; 238us; 125us; 239us; 125us; 245us; 125us; 260us; 125us; 267us; 125us; 275us; 125us; 29us; 65535us; 13us; 126us; 63us; 126us; 68us; 126us; 83us; 126us; 87us; 126us; 91us; 126us; 104us; 126us; 106us; 126us; 113us; 126us; 168us; 126us; 172us; 126us; 183us; 126us; 190us; 126us; 193us; 126us; 199us; 126us; 203us; 126us; 207us; 126us; 211us; 126us; 214us; 126us; 218us; 126us; 221us; 126us; 225us; 126us; 228us; 126us; 238us; 126us; 239us; 126us; 245us; 126us; 260us; 126us; 267us; 126us; 275us; 126us; 29us; 65535us; 13us; 127us; 63us; 127us; 68us; 127us; 83us; 127us; 87us; 127us; 91us; 127us; 104us; 127us; 106us; 127us; 113us; 127us; 168us; 127us; 172us; 127us; 183us; 127us; 190us; 127us; 193us; 127us; 199us; 127us; 203us; 127us; 207us; 127us; 211us; 127us; 214us; 127us; 218us; 127us; 221us; 127us; 225us; 127us; 228us; 127us; 238us; 127us; 239us; 127us; 245us; 127us; 260us; 127us; 267us; 127us; 275us; 127us; 29us; 65535us; 13us; 134us; 63us; 134us; 68us; 134us; 83us; 134us; 87us; 134us; 91us; 134us; 104us; 134us; 106us; 134us; 113us; 134us; 168us; 134us; 172us; 134us; 183us; 134us; 190us; 134us; 193us; 134us; 199us; 134us; 203us; 134us; 207us; 134us; 211us; 134us; 214us; 134us; 218us; 134us; 221us; 134us; 225us; 134us; 228us; 134us; 238us; 134us; 239us; 134us; 245us; 134us; 260us; 134us; 267us; 134us; 275us; 134us; 29us; 65535us; 13us; 137us; 63us; 137us; 68us; 137us; 83us; 137us; 87us; 137us; 91us; 137us; 104us; 137us; 106us; 137us; 113us; 137us; 168us; 137us; 172us; 137us; 183us; 137us; 190us; 137us; 193us; 137us; 199us; 137us; 203us; 137us; 207us; 137us; 211us; 137us; 214us; 137us; 218us; 137us; 221us; 137us; 225us; 137us; 228us; 137us; 238us; 137us; 239us; 137us; 245us; 137us; 260us; 137us; 267us; 137us; 275us; 137us; 2us; 65535us; 257us; 258us; 264us; 265us; 2us; 65535us; 257us; 264us; 264us; 264us; 3us; 65535us; 245us; 250us; 247us; 248us; 271us; 272us; 4us; 65535us; 245us; 270us; 247us; 270us; 253us; 254us; 271us; 270us; 31us; 65535us; 13us; 152us; 63us; 152us; 68us; 152us; 83us; 152us; 87us; 152us; 91us; 152us; 104us; 152us; 106us; 152us; 113us; 152us; 160us; 166us; 168us; 152us; 172us; 152us; 176us; 166us; 183us; 152us; 190us; 152us; 193us; 152us; 199us; 152us; 203us; 152us; 207us; 152us; 211us; 152us; 214us; 152us; 218us; 152us; 221us; 152us; 225us; 152us; 228us; 152us; 238us; 152us; 239us; 152us; 245us; 152us; 260us; 152us; 267us; 152us; 275us; 152us; 50us; 65535us; 13us; 277us; 55us; 310us; 63us; 277us; 68us; 277us; 83us; 277us; 87us; 277us; 89us; 310us; 91us; 277us; 104us; 277us; 106us; 277us; 113us; 277us; 144us; 145us; 160us; 277us; 168us; 277us; 172us; 277us; 176us; 277us; 179us; 310us; 183us; 277us; 187us; 310us; 190us; 277us; 193us; 277us; 199us; 277us; 203us; 277us; 207us; 277us; 211us; 277us; 214us; 277us; 218us; 277us; 221us; 277us; 225us; 277us; 228us; 277us; 238us; 277us; 239us; 277us; 245us; 277us; 260us; 277us; 267us; 277us; 275us; 277us; 285us; 286us; 287us; 310us; 291us; 310us; 296us; 310us; 297us; 310us; 306us; 310us; 308us; 310us; 311us; 312us; 312us; 310us; 322us; 310us; 326us; 310us; 330us; 310us; 334us; 310us; 342us; 310us; 9us; 65535us; 89us; 90us; 179us; 189us; 187us; 189us; 287us; 289us; 312us; 313us; 322us; 323us; 326us; 327us; 330us; 331us; 334us; 335us; 2us; 65535us; 292us; 294us; 338us; 339us; 2us; 65535us; 297us; 299us; 342us; 343us; 16us; 65535us; 55us; 56us; 89us; 287us; 179us; 287us; 187us; 287us; 287us; 287us; 291us; 292us; 296us; 297us; 297us; 295us; 306us; 307us; 308us; 309us; 312us; 287us; 322us; 287us; 326us; 287us; 330us; 287us; 334us; 287us; 342us; 295us; 16us; 65535us; 55us; 315us; 89us; 315us; 179us; 315us; 187us; 315us; 287us; 315us; 291us; 315us; 296us; 315us; 297us; 315us; 306us; 315us; 308us; 315us; 312us; 315us; 322us; 315us; 326us; 315us; 330us; 315us; 334us; 315us; 342us; 315us; 16us; 65535us; 55us; 316us; 89us; 316us; 179us; 316us; 187us; 316us; 287us; 316us; 291us; 316us; 296us; 316us; 297us; 316us; 306us; 316us; 308us; 316us; 312us; 316us; 322us; 316us; 326us; 316us; 330us; 316us; 334us; 316us; 342us; 316us; 16us; 65535us; 55us; 317us; 89us; 317us; 179us; 317us; 187us; 317us; 287us; 317us; 291us; 317us; 296us; 317us; 297us; 317us; 306us; 317us; 308us; 317us; 312us; 317us; 322us; 317us; 326us; 317us; 330us; 317us; 334us; 317us; 342us; 317us; 16us; 65535us; 55us; 318us; 89us; 318us; 179us; 318us; 187us; 318us; 287us; 318us; 291us; 318us; 296us; 318us; 297us; 318us; 306us; 318us; 308us; 318us; 312us; 318us; 322us; 318us; 326us; 318us; 330us; 318us; 334us; 318us; 342us; 318us; 16us; 65535us; 55us; 319us; 89us; 319us; 179us; 319us; 187us; 319us; 287us; 319us; 291us; 319us; 296us; 319us; 297us; 319us; 306us; 319us; 308us; 319us; 312us; 319us; 322us; 319us; 326us; 319us; 330us; 319us; 334us; 319us; 342us; 319us; 16us; 65535us; 55us; 320us; 89us; 320us; 179us; 320us; 187us; 320us; 287us; 320us; 291us; 320us; 296us; 320us; 297us; 320us; 306us; 320us; 308us; 320us; 312us; 320us; 322us; 320us; 326us; 320us; 330us; 320us; 334us; 320us; 342us; 320us; 3us; 65535us; 232us; 233us; 234us; 235us; 278us; 279us; 4us; 65535us; 232us; 345us; 234us; 345us; 278us; 345us; 347us; 348us; 4us; 65535us; 232us; 346us; 234us; 346us; 278us; 346us; 347us; 346us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 40us; 43us; 49us; 52us; 55us; 58us; 95us; 98us; 101us; 104us; 109us; 139us; 149us; 179us; 209us; 239us; 242us; 244us; 252us; 255us; 285us; 288us; 291us; 321us; 351us; 381us; 411us; 441us; 471us; 501us; 531us; 561us; 591us; 621us; 651us; 654us; 657us; 661us; 666us; 698us; 749us; 759us; 762us; 765us; 782us; 799us; 816us; 833us; 850us; 867us; 884us; 888us; 893us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 2us; 8us; 9us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 16us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 4us; 21us; 22us; 25us; 26us; 1us; 21us; 2us; 22us; 26us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 26us; 2us; 27us; 28us; 2us; 27us; 28us; 1us; 27us; 1us; 27us; 1us; 28us; 1us; 28us; 1us; 28us; 1us; 28us; 1us; 28us; 2us; 29us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 2us; 32us; 33us; 1us; 33us; 1us; 34us; 2us; 35us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 39us; 1us; 39us; 1us; 39us; 2us; 40us; 41us; 2us; 40us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 2us; 45us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 49us; 1us; 49us; 2us; 50us; 51us; 3us; 50us; 51us; 103us; 3us; 50us; 51us; 105us; 3us; 50us; 51us; 107us; 3us; 50us; 51us; 109us; 1us; 51us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 65us; 1us; 66us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 84us; 2us; 85us; 86us; 2us; 85us; 86us; 2us; 85us; 86us; 2us; 85us; 86us; 2us; 85us; 86us; 2us; 85us; 86us; 1us; 85us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 90us; 1us; 90us; 1us; 92us; 1us; 92us; 2us; 93us; 94us; 2us; 93us; 94us; 2us; 93us; 94us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 94us; 2us; 95us; 96us; 1us; 96us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 99us; 1us; 99us; 1us; 99us; 1us; 99us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 101us; 1us; 101us; 1us; 101us; 2us; 102us; 103us; 2us; 102us; 103us; 1us; 102us; 1us; 102us; 1us; 103us; 1us; 103us; 1us; 103us; 2us; 104us; 105us; 2us; 104us; 105us; 1us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 105us; 2us; 106us; 107us; 2us; 106us; 107us; 1us; 106us; 1us; 106us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 108us; 1us; 108us; 1us; 108us; 1us; 108us; 1us; 108us; 1us; 108us; 2us; 109us; 110us; 2us; 109us; 110us; 1us; 109us; 1us; 109us; 1us; 109us; 1us; 110us; 1us; 110us; 2us; 111us; 112us; 2us; 111us; 112us; 1us; 111us; 1us; 111us; 1us; 111us; 1us; 111us; 1us; 112us; 1us; 112us; 1us; 113us; 1us; 113us; 1us; 113us; 1us; 113us; 1us; 114us; 1us; 114us; 1us; 114us; 1us; 114us; 1us; 114us; 1us; 114us; 1us; 114us; 1us; 114us; 2us; 115us; 116us; 1us; 116us; 1us; 117us; 1us; 117us; 1us; 117us; 1us; 117us; 1us; 119us; 1us; 119us; 1us; 119us; 1us; 120us; 3us; 120us; 123us; 126us; 1us; 120us; 1us; 120us; 2us; 121us; 122us; 1us; 121us; 1us; 121us; 1us; 121us; 2us; 123us; 126us; 3us; 123us; 126us; 143us; 1us; 124us; 1us; 125us; 1us; 126us; 1us; 126us; 3us; 127us; 128us; 129us; 1us; 128us; 1us; 129us; 3us; 130us; 131us; 132us; 2us; 130us; 132us; 2us; 130us; 132us; 1us; 131us; 1us; 132us; 3us; 133us; 134us; 135us; 2us; 133us; 135us; 2us; 133us; 135us; 1us; 134us; 1us; 135us; 1us; 136us; 1us; 137us; 1us; 138us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 142us; 1us; 142us; 1us; 143us; 1us; 143us; 1us; 144us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 146us; 1us; 147us; 1us; 148us; 1us; 149us; 1us; 150us; 1us; 151us; 1us; 152us; 1us; 152us; 1us; 152us; 1us; 152us; 1us; 153us; 1us; 153us; 1us; 153us; 1us; 153us; 1us; 154us; 1us; 154us; 1us; 154us; 1us; 154us; 1us; 155us; 1us; 155us; 1us; 155us; 1us; 155us; 1us; 156us; 1us; 156us; 1us; 156us; 1us; 156us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 157us; 1us; 158us; 2us; 159us; 160us; 1us; 160us; 1us; 160us; 2us; 161us; 163us; 1us; 162us; 1us; 163us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 102us; 104us; 107us; 109us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 132us; 135us; 137us; 139us; 141us; 143us; 145us; 147us; 149us; 152us; 154us; 156us; 158us; 160us; 162us; 164us; 167us; 169us; 171us; 174us; 176us; 178us; 180us; 182us; 184us; 186us; 188us; 190us; 193us; 196us; 198us; 200us; 202us; 204us; 206us; 208us; 210us; 212us; 215us; 217us; 219us; 221us; 223us; 225us; 227us; 229us; 231us; 234us; 238us; 242us; 246us; 250us; 252us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 268us; 270us; 272us; 274us; 276us; 278us; 280us; 282us; 284us; 286us; 288us; 290us; 292us; 294us; 296us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 320us; 322us; 324us; 326us; 328us; 330us; 332us; 334us; 336us; 339us; 342us; 345us; 348us; 351us; 354us; 356us; 358us; 360us; 362us; 364us; 366us; 368us; 370us; 372us; 374us; 376us; 378us; 380us; 382us; 384us; 386us; 389us; 392us; 395us; 397us; 399us; 401us; 403us; 405us; 407us; 410us; 412us; 414us; 416us; 418us; 420us; 422us; 424us; 426us; 428us; 430us; 432us; 434us; 436us; 438us; 440us; 442us; 444us; 446us; 448us; 450us; 452us; 454us; 457us; 460us; 462us; 464us; 466us; 468us; 470us; 473us; 476us; 478us; 480us; 482us; 484us; 486us; 489us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 506us; 508us; 510us; 512us; 514us; 517us; 520us; 522us; 524us; 526us; 528us; 530us; 533us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 568us; 570us; 572us; 575us; 577us; 579us; 581us; 583us; 585us; 587us; 589us; 591us; 593us; 597us; 599us; 601us; 604us; 606us; 608us; 610us; 613us; 617us; 619us; 621us; 623us; 625us; 629us; 631us; 633us; 637us; 640us; 643us; 645us; 647us; 651us; 654us; 657us; 659us; 661us; 663us; 665us; 667us; 669us; 671us; 673us; 675us; 677us; 679us; 681us; 683us; 685us; 687us; 689us; 691us; 693us; 695us; 697us; 699us; 701us; 703us; 705us; 707us; 709us; 711us; 713us; 715us; 717us; 719us; 721us; 723us; 725us; 727us; 729us; 731us; 733us; 735us; 737us; 739us; 741us; 743us; 745us; 747us; 749us; 751us; 753us; 756us; 758us; 760us; 763us; 765us; |]
let _fsyacc_action_rows = 352
let _fsyacc_actionTableElements = [|1us; 16387us; 36us; 15us; 0us; 49152us; 4us; 16389us; 27us; 61us; 30us; 52us; 31us; 47us; 32us; 72us; 2us; 32768us; 33us; 12us; 34us; 36us; 1us; 32768us; 69us; 5us; 0us; 16385us; 1us; 32768us; 69us; 7us; 0us; 16386us; 1us; 16387us; 36us; 15us; 0us; 16388us; 4us; 16389us; 27us; 61us; 30us; 52us; 31us; 47us; 32us; 72us; 0us; 16390us; 1us; 32768us; 39us; 13us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16391us; 3us; 32768us; 56us; 38us; 62us; 23us; 68us; 25us; 1us; 32768us; 35us; 17us; 1us; 32768us; 68us; 18us; 0us; 16392us; 2us; 32768us; 62us; 23us; 68us; 25us; 1us; 32768us; 35us; 21us; 1us; 32768us; 68us; 22us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 1us; 32768us; 43us; 26us; 1us; 32768us; 68us; 27us; 1us; 32768us; 43us; 28us; 1us; 32768us; 68us; 29us; 1us; 32768us; 46us; 30us; 1us; 32768us; 64us; 31us; 1us; 32768us; 43us; 32us; 1us; 32768us; 64us; 33us; 1us; 32768us; 43us; 34us; 1us; 32768us; 64us; 35us; 0us; 16396us; 1us; 32768us; 56us; 38us; 0us; 16397us; 3us; 16399us; 65us; 45us; 67us; 44us; 68us; 43us; 1us; 32768us; 57us; 40us; 0us; 16398us; 3us; 16399us; 65us; 45us; 67us; 44us; 68us; 43us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 3us; 32768us; 27us; 61us; 32us; 72us; 56us; 49us; 0us; 16405us; 2us; 32768us; 27us; 61us; 32us; 72us; 1us; 32768us; 57us; 51us; 0us; 16406us; 1us; 32768us; 67us; 53us; 1us; 16473us; 68us; 174us; 1us; 32768us; 39us; 55us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 0us; 16407us; 0us; 16408us; 0us; 16409us; 1us; 32768us; 57us; 60us; 0us; 16410us; 1us; 32768us; 68us; 62us; 2us; 32768us; 39us; 63us; 60us; 65us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16411us; 1us; 16473us; 68us; 174us; 1us; 32768us; 61us; 67us; 1us; 32768us; 39us; 68us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16412us; 1us; 16413us; 27us; 61us; 0us; 16414us; 1us; 32768us; 67us; 73us; 1us; 16473us; 68us; 174us; 1us; 32768us; 39us; 75us; 1us; 32768us; 67us; 79us; 0us; 16415us; 1us; 16416us; 32us; 72us; 0us; 16417us; 0us; 16418us; 1us; 16419us; 41us; 81us; 1us; 32768us; 67us; 79us; 0us; 16420us; 38us; 16422us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 28us; 101us; 29us; 89us; 31us; 94us; 42us; 135us; 44us; 128us; 45us; 130us; 49us; 16432us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 57us; 85us; 0us; 16421us; 1us; 32768us; 49us; 87us; 38us; 16422us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 28us; 101us; 29us; 89us; 31us; 94us; 42us; 135us; 44us; 128us; 45us; 130us; 49us; 16432us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16423us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 1us; 16424us; 39us; 91us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16425us; 0us; 16426us; 1us; 32768us; 56us; 95us; 1us; 32768us; 28us; 101us; 1us; 32768us; 57us; 97us; 0us; 16427us; 0us; 16428us; 1us; 16429us; 28us; 101us; 0us; 16430us; 1us; 32768us; 27us; 102us; 1us; 32768us; 68us; 103us; 1us; 32768us; 39us; 104us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16431us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16433us; 1us; 16434us; 48us; 113us; 2us; 16434us; 18us; 214us; 48us; 113us; 2us; 16434us; 18us; 221us; 48us; 113us; 2us; 16434us; 18us; 228us; 48us; 113us; 2us; 16434us; 18us; 239us; 48us; 113us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 0us; 16446us; 0us; 16447us; 0us; 16448us; 1us; 32768us; 68us; 129us; 0us; 16449us; 1us; 32768us; 68us; 131us; 0us; 16450us; 1us; 32768us; 68us; 133us; 0us; 16451us; 0us; 16452us; 1us; 32768us; 68us; 136us; 0us; 16453us; 0us; 16454us; 1us; 32768us; 56us; 83us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 3us; 32768us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 1us; 16473us; 68us; 174us; 1us; 32768us; 56us; 83us; 0us; 16468us; 1us; 16473us; 68us; 174us; 1us; 32768us; 56us; 83us; 1us; 32768us; 18us; 159us; 1us; 32768us; 56us; 160us; 3us; 16475us; 66us; 284us; 67us; 283us; 68us; 281us; 2us; 32768us; 19us; 171us; 57us; 165us; 1us; 32768us; 49us; 163us; 1us; 32768us; 57us; 164us; 0us; 16469us; 0us; 16470us; 1us; 16473us; 68us; 174us; 1us; 32768us; 51us; 168us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 49us; 170us; 0us; 16471us; 1us; 32768us; 51us; 172us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16472us; 1us; 16473us; 68us; 174us; 0us; 16474us; 3us; 16475us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16476us; 1us; 32768us; 56us; 179us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 2us; 32768us; 15us; 182us; 57us; 181us; 0us; 16477us; 1us; 32768us; 51us; 183us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 49us; 185us; 1us; 32768us; 57us; 186us; 0us; 16478us; 17us; 16479us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 0us; 16480us; 1us; 32768us; 51us; 190us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 49us; 192us; 0us; 16481us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 14us; 195us; 1us; 32768us; 56us; 83us; 1us; 32768us; 15us; 197us; 1us; 32768us; 56us; 83us; 0us; 16482us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 14us; 201us; 1us; 32768us; 56us; 83us; 0us; 16483us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 14us; 205us; 1us; 32768us; 56us; 83us; 0us; 16484us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 59us; 209us; 0us; 16485us; 1us; 32768us; 54us; 211us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 55us; 213us; 0us; 16486us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 55us; 216us; 0us; 16487us; 1us; 32768us; 54us; 218us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 55us; 220us; 0us; 16488us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 55us; 223us; 0us; 16489us; 1us; 32768us; 54us; 225us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 55us; 227us; 0us; 16490us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 55us; 230us; 0us; 16491us; 1us; 32768us; 54us; 232us; 2us; 32768us; 64us; 349us; 68us; 350us; 1us; 32768us; 40us; 234us; 2us; 32768us; 64us; 349us; 68us; 350us; 1us; 32768us; 55us; 236us; 0us; 16492us; 1us; 32768us; 56us; 238us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 57us; 241us; 0us; 16493us; 1us; 32768us; 57us; 243us; 0us; 16494us; 1us; 32768us; 56us; 245us; 35us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 57us; 16502us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 274us; 1us; 32768us; 18us; 247us; 1us; 16502us; 68us; 273us; 1us; 32768us; 57us; 249us; 0us; 16495us; 1us; 32768us; 57us; 251us; 0us; 16496us; 1us; 32768us; 56us; 253us; 1us; 32768us; 68us; 273us; 1us; 32768us; 57us; 255us; 0us; 16497us; 1us; 32768us; 56us; 257us; 1us; 32768us; 68us; 266us; 1us; 32768us; 15us; 259us; 1us; 32768us; 51us; 260us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 49us; 262us; 1us; 32768us; 57us; 263us; 0us; 16498us; 1us; 16499us; 68us; 266us; 0us; 16500us; 1us; 32768us; 51us; 267us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 1us; 32768us; 49us; 269us; 0us; 16501us; 1us; 32768us; 48us; 271us; 1us; 16502us; 68us; 273us; 0us; 16503us; 1us; 32768us; 39us; 275us; 2us; 16507us; 39us; 275us; 47us; 285us; 34us; 16432us; 1us; 147us; 2us; 148us; 3us; 210us; 4us; 217us; 5us; 224us; 6us; 231us; 7us; 237us; 8us; 256us; 9us; 244us; 10us; 252us; 11us; 193us; 12us; 199us; 13us; 203us; 16us; 146us; 17us; 178us; 20us; 156us; 21us; 144us; 22us; 143us; 23us; 142us; 24us; 141us; 25us; 138us; 26us; 153us; 42us; 135us; 44us; 128us; 45us; 130us; 53us; 132us; 56us; 83us; 58us; 207us; 62us; 151us; 63us; 150us; 64us; 149us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16504us; 1us; 16506us; 60us; 278us; 2us; 32768us; 64us; 349us; 68us; 350us; 1us; 32768us; 61us; 280us; 0us; 16505us; 1us; 16507us; 47us; 285us; 2us; 16507us; 0us; 308us; 47us; 285us; 0us; 16508us; 0us; 16509us; 3us; 32768us; 66us; 284us; 67us; 283us; 68us; 281us; 0us; 16510us; 18us; 16511us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 40us; 288us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 0us; 16512us; 0us; 16513us; 2us; 32768us; 39us; 291us; 40us; 293us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 1us; 16514us; 68us; 290us; 0us; 16515us; 0us; 16516us; 2us; 32768us; 39us; 296us; 40us; 298us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 17us; 16517us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 0us; 16518us; 0us; 16519us; 0us; 16520us; 0us; 16521us; 0us; 16522us; 0us; 16523us; 0us; 16524us; 0us; 16525us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 0us; 16526us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 0us; 16527us; 0us; 16528us; 3us; 32768us; 66us; 284us; 67us; 283us; 68us; 281us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 1us; 32768us; 59us; 314us; 0us; 16529us; 0us; 16530us; 0us; 16531us; 0us; 16532us; 0us; 16533us; 0us; 16534us; 0us; 16535us; 1us; 32768us; 56us; 322us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 1us; 32768us; 57us; 324us; 0us; 16536us; 1us; 32768us; 56us; 326us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 1us; 32768us; 57us; 328us; 0us; 16537us; 1us; 32768us; 56us; 330us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 1us; 32768us; 57us; 332us; 0us; 16538us; 1us; 32768us; 56us; 334us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 1us; 32768us; 57us; 336us; 0us; 16539us; 1us; 32768us; 56us; 338us; 1us; 32768us; 68us; 290us; 1us; 32768us; 57us; 340us; 0us; 16540us; 1us; 32768us; 56us; 342us; 17us; 32768us; 1us; 300us; 2us; 301us; 3us; 321us; 4us; 325us; 5us; 329us; 6us; 333us; 7us; 341us; 9us; 337us; 37us; 306us; 38us; 305us; 58us; 311us; 62us; 304us; 63us; 303us; 64us; 302us; 66us; 284us; 67us; 283us; 68us; 282us; 1us; 32768us; 57us; 344us; 0us; 16541us; 0us; 16542us; 1us; 16543us; 44us; 347us; 2us; 32768us; 64us; 349us; 68us; 350us; 0us; 16544us; 1us; 16545us; 68us; 351us; 0us; 16546us; 0us; 16547us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 8us; 11us; 13us; 14us; 16us; 17us; 19us; 20us; 25us; 26us; 28us; 63us; 64us; 68us; 70us; 72us; 73us; 76us; 78us; 80us; 81us; 82us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 104us; 106us; 107us; 111us; 113us; 114us; 118us; 119us; 120us; 121us; 122us; 123us; 127us; 128us; 131us; 133us; 134us; 136us; 138us; 140us; 158us; 159us; 160us; 161us; 163us; 164us; 166us; 169us; 204us; 205us; 207us; 209us; 211us; 246us; 247us; 249us; 250us; 252us; 254us; 256us; 258us; 259us; 261us; 262us; 263us; 265us; 267us; 268us; 307us; 309us; 310us; 312us; 351us; 352us; 370us; 372us; 407us; 408us; 409us; 411us; 413us; 415us; 416us; 417us; 419us; 420us; 422us; 424us; 426us; 461us; 462us; 497us; 498us; 500us; 503us; 506us; 509us; 512us; 547us; 548us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 563us; 564us; 566us; 567us; 569us; 570us; 571us; 573us; 574us; 575us; 577us; 578us; 579us; 580us; 581us; 582us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 596us; 598us; 599us; 601us; 603us; 605us; 607us; 611us; 614us; 616us; 618us; 619us; 620us; 622us; 624us; 659us; 661us; 662us; 664us; 699us; 700us; 702us; 703us; 707us; 708us; 710us; 728us; 731us; 732us; 734us; 769us; 771us; 773us; 774us; 792us; 793us; 795us; 830us; 832us; 833us; 868us; 870us; 872us; 874us; 876us; 877us; 912us; 914us; 916us; 917us; 952us; 954us; 956us; 957us; 992us; 994us; 995us; 997us; 1032us; 1034us; 1035us; 1070us; 1072us; 1073us; 1075us; 1110us; 1112us; 1113us; 1148us; 1150us; 1151us; 1153us; 1188us; 1190us; 1191us; 1226us; 1228us; 1229us; 1231us; 1234us; 1236us; 1239us; 1241us; 1242us; 1244us; 1279us; 1314us; 1316us; 1317us; 1319us; 1320us; 1322us; 1358us; 1360us; 1362us; 1364us; 1365us; 1367us; 1368us; 1370us; 1372us; 1374us; 1375us; 1377us; 1379us; 1381us; 1383us; 1418us; 1420us; 1422us; 1423us; 1425us; 1426us; 1428us; 1463us; 1465us; 1466us; 1468us; 1470us; 1471us; 1473us; 1476us; 1511us; 1512us; 1514us; 1517us; 1519us; 1520us; 1522us; 1525us; 1526us; 1527us; 1531us; 1532us; 1551us; 1552us; 1553us; 1556us; 1574us; 1576us; 1577us; 1578us; 1581us; 1599us; 1617us; 1618us; 1619us; 1620us; 1621us; 1622us; 1623us; 1624us; 1625us; 1643us; 1644us; 1662us; 1663us; 1664us; 1668us; 1686us; 1688us; 1689us; 1690us; 1691us; 1692us; 1693us; 1694us; 1695us; 1697us; 1715us; 1717us; 1718us; 1720us; 1738us; 1740us; 1741us; 1743us; 1761us; 1763us; 1764us; 1766us; 1784us; 1786us; 1787us; 1789us; 1791us; 1793us; 1794us; 1796us; 1814us; 1816us; 1817us; 1818us; 1820us; 1823us; 1824us; 1826us; 1827us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 5us; 1us; 2us; 4us; 4us; 7us; 1us; 2us; 5us; 1us; 2us; 1us; 1us; 3us; 3us; 0us; 3us; 2us; 4us; 1us; 4us; 1us; 1us; 2us; 5us; 0us; 2us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 9us; 7us; 5us; 3us; 0us; 2us; 0us; 2us; 4us; 8us; 1us; 2us; 4us; 6us; 4us; 4us; 3us; 4us; 6us; 4us; 6us; 4us; 6us; 6us; 6us; 4us; 6us; 4us; 4us; 8us; 1us; 2us; 4us; 0us; 3us; 3us; 4us; 1us; 1us; 1us; 1us; 3us; 1us; 2us; 2us; 3us; 2us; 4us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 4us; 4us; 4us; 4us; 1us; 1us; 3us; 1us; 1us; 2us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 15us; 16us; 16us; 17us; 18us; 18us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 21us; 22us; 22us; 23us; 24us; 24us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 28us; 28us; 29us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 35us; 36us; 37us; 38us; 39us; 40us; 40us; 41us; 41us; 42us; 42us; 43us; 44us; 44us; 45us; 45us; 46us; 47us; 48us; 48us; 49us; 50us; 50us; 51us; 52us; 52us; 53us; 53us; 53us; 53us; 54us; 54us; 54us; 55us; 55us; 55us; 56us; 56us; 56us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 66us; 66us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 16394us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 16398us; 65535us; 16400us; 16401us; 16402us; 16403us; 16404us; 65535us; 16405us; 65535us; 65535us; 16406us; 65535us; 65535us; 65535us; 65535us; 16407us; 16408us; 16409us; 65535us; 16410us; 65535us; 65535us; 65535us; 16411us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 16417us; 16418us; 65535us; 65535us; 16420us; 65535us; 65535us; 16421us; 65535us; 65535us; 16423us; 65535us; 65535us; 65535us; 16425us; 16426us; 65535us; 65535us; 65535us; 16427us; 16428us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 16431us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16435us; 16436us; 16437us; 16438us; 16439us; 16440us; 16441us; 16442us; 16443us; 16444us; 16445us; 16446us; 16447us; 16448us; 65535us; 16449us; 65535us; 16450us; 65535us; 16451us; 16452us; 65535us; 16453us; 16454us; 65535us; 16455us; 16456us; 16457us; 16458us; 16459us; 65535us; 16460us; 16461us; 16462us; 16463us; 16464us; 16465us; 16466us; 16467us; 65535us; 65535us; 16468us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16469us; 16470us; 65535us; 65535us; 65535us; 65535us; 16471us; 65535us; 65535us; 16472us; 65535us; 16474us; 65535us; 16476us; 65535us; 65535us; 65535us; 16477us; 65535us; 65535us; 65535us; 65535us; 16478us; 65535us; 16480us; 65535us; 65535us; 65535us; 16481us; 65535us; 65535us; 65535us; 65535us; 65535us; 16482us; 65535us; 65535us; 65535us; 16483us; 65535us; 65535us; 65535us; 16484us; 65535us; 65535us; 16485us; 65535us; 65535us; 65535us; 16486us; 65535us; 65535us; 16487us; 65535us; 65535us; 65535us; 16488us; 65535us; 65535us; 16489us; 65535us; 65535us; 65535us; 16490us; 65535us; 65535us; 16491us; 65535us; 65535us; 65535us; 65535us; 65535us; 16492us; 65535us; 65535us; 65535us; 65535us; 16493us; 65535us; 16494us; 65535us; 65535us; 65535us; 65535us; 65535us; 16495us; 65535us; 16496us; 65535us; 65535us; 65535us; 16497us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16498us; 65535us; 16500us; 65535us; 65535us; 65535us; 16501us; 65535us; 65535us; 16503us; 65535us; 65535us; 65535us; 16504us; 65535us; 65535us; 65535us; 16505us; 65535us; 65535us; 16508us; 16509us; 65535us; 16510us; 65535us; 16512us; 16513us; 65535us; 65535us; 65535us; 16515us; 16516us; 65535us; 65535us; 65535us; 16518us; 16519us; 16520us; 16521us; 16522us; 16523us; 16524us; 16525us; 65535us; 16526us; 65535us; 16527us; 16528us; 65535us; 65535us; 65535us; 16529us; 16530us; 16531us; 16532us; 16533us; 16534us; 16535us; 65535us; 65535us; 65535us; 16536us; 65535us; 65535us; 65535us; 16537us; 65535us; 65535us; 65535us; 16538us; 65535us; 65535us; 65535us; 16539us; 65535us; 65535us; 65535us; 16540us; 65535us; 65535us; 65535us; 16541us; 16542us; 65535us; 65535us; 16544us; 65535us; 16546us; 16547us; |]
let _fsyacc_reductions ()  =    [| 
# 711 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 720 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 ".\Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 74 ".\Parser.fsy"
                 :  Unit ));
# 733 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 ".\Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 75 ".\Parser.fsy"
                 :  Unit ));
# 746 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 ".\Parser.fsy"
                                          [] 
                   )
# 77 ".\Parser.fsy"
                 : 'gentype_import_list));
# 756 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 78 ".\Parser.fsy"
                 : 'gentype_import_list));
# 768 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 ".\Parser.fsy"
                                         [] 
                   )
# 80 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 778 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 81 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 790 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 ".\Parser.fsy"
                                                      _3 
                   )
# 83 ".\Parser.fsy"
                 : 'gentype_main));
# 801 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 ".\Parser.fsy"
                                                                    { Explicit = []; Path = _2; Alias = _4 } 
                   )
# 85 ".\Parser.fsy"
                 : 'gentype_import));
# 813 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 ".\Parser.fsy"
                                                                          { Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 86 ".\Parser.fsy"
                 : 'gentype_import));
# 826 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 ".\Parser.fsy"
                                            IPLocal (_1) 
                   )
# 88 ".\Parser.fsy"
                 : 'gentype_import_path));
# 837 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 ".\Parser.fsy"
                                   IPRemote (_1) 
                   )
# 89 ".\Parser.fsy"
                 : 'gentype_import_path));
# 848 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 ".\Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 92 ".\Parser.fsy"
                 : 'gentype_remote));
# 864 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 ".\Parser.fsy"
                                                   _2 
                   )
# 94 ".\Parser.fsy"
                 : 'gentype_export));
# 875 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 ".\Parser.fsy"
                                                               _2 
                   )
# 96 ".\Parser.fsy"
                 : 'gentype_brace_names));
# 886 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 ".\Parser.fsy"
                                       [] 
                   )
# 98 ".\Parser.fsy"
                 : 'gentype_name_list));
# 896 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 ".\Parser.fsy"
                                            _1 :: _2 
                   )
# 99 ".\Parser.fsy"
                 : 'gentype_name_list));
# 908 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\Parser.fsy"
                                          _1 
                   )
# 101 ".\Parser.fsy"
                 : 'gentype_name));
# 919 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 ".\Parser.fsy"
                                         _1 
                   )
# 102 ".\Parser.fsy"
                 : 'gentype_name));
# 930 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 ".\Parser.fsy"
                                          _1 
                   )
# 103 ".\Parser.fsy"
                 : 'gentype_name));
# 941 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\Parser.fsy"
                                                        DFunc (_1) 
                   )
# 107 ".\Parser.fsy"
                 : 'gentype_declaration));
# 952 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 ".\Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 108 ".\Parser.fsy"
                 : 'gentype_declaration));
# 963 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 ".\Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 109 ".\Parser.fsy"
                 : 'gentype_declaration));
# 974 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 ".\Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 110 ".\Parser.fsy"
                 : 'gentype_declaration));
# 987 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 ".\Parser.fsy"
                                               DType (_1) 
                   )
# 111 ".\Parser.fsy"
                 : 'gentype_declaration));
# 998 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 112 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1009 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 ".\Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 113 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1020 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 ".\Parser.fsy"
                                                                                { Name = _2; FixedParams = []; Body = _4 } 
                   )
# 115 ".\Parser.fsy"
                 : 'gentype_function));
# 1032 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_param_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 ".\Parser.fsy"
                                                                                              { Name = _2; FixedParams = _4; Body = _7 } 
                   )
# 116 ".\Parser.fsy"
                 : 'gentype_function));
# 1045 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 ".\Parser.fsy"
                                                   [_1] 
                   )
# 118 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 119 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1068 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 ".\Parser.fsy"
                                                                                   { Name = _2; Params = _3; Constructors = _5 } 
                   )
# 121 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1081 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 ".\Parser.fsy"
                                                   [_1] 
                   )
# 123 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1092 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 124 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1104 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 ".\Parser.fsy"
                                              { Name = _1; Components = [] } 
                   )
# 126 ".\Parser.fsy"
                 : 'gentype_constructor));
# 1115 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 ".\Parser.fsy"
                                                           [_1] 
                   )
# 128 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1126 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 ".\Parser.fsy"
                                                               _1 :: _2 
                   )
# 129 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1138 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 ".\Parser.fsy"
                                                                                  _2 
                   )
# 133 ".\Parser.fsy"
                 : 'gentype_term_statement_block));
# 1149 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\Parser.fsy"
                                                        [] 
                   )
# 135 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 1159 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\Parser.fsy"
                                                                            _1 :: _3 
                   )
# 136 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 1171 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\Parser.fsy"
                                                                    SLet (_2, []) 
                   )
# 138 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 1182 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\Parser.fsy"
                                                                         SLet (_2, _4) 
                   )
# 139 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 1194 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\Parser.fsy"
                                                      SLocals ([_1]) 
                   )
# 140 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 1205 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_local_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 ".\Parser.fsy"
                                                                             SLocals (_3) 
                   )
# 141 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 1216 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\Parser.fsy"
                                                   SExpression (_1) 
                   )
# 142 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 1227 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\Parser.fsy"
                                                                 [_1] 
                   )
# 144 ".\Parser.fsy"
                 : 'gentype_local_function_list));
# 1238 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_local_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 ".\Parser.fsy"
                                                                 _1 :: _2 
                   )
# 145 ".\Parser.fsy"
                 : 'gentype_local_function_list));
# 1250 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 ".\Parser.fsy"
                                                                                     { Name = _3; Body = _5 } 
                   )
# 147 ".\Parser.fsy"
                 : 'gentype_local_function));
# 1262 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 ".\Parser.fsy"
                                         [] 
                   )
# 149 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 1272 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 ".\Parser.fsy"
                                             _1 :: _2 
                   )
# 150 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 1284 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 ".\Parser.fsy"
                                                            [_1] 
                   )
# 152 ".\Parser.fsy"
                 : 'gentype_simple_expr_list));
# 1295 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 ".\Parser.fsy"
                                                                 _1 :: _3 
                   )
# 153 ".\Parser.fsy"
                 : 'gentype_simple_expr_list));
# 1307 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 ".\Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 157 ".\Parser.fsy"
                 : 'gentype_word));
# 1318 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 ".\Parser.fsy"
                                            _1 
                   )
# 158 ".\Parser.fsy"
                 : 'gentype_word));
# 1329 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 ".\Parser.fsy"
                                           _1 
                   )
# 159 ".\Parser.fsy"
                 : 'gentype_word));
# 1340 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 ".\Parser.fsy"
                                         _1 
                   )
# 160 ".\Parser.fsy"
                 : 'gentype_word));
# 1351 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 ".\Parser.fsy"
                                          _1 
                   )
# 161 ".\Parser.fsy"
                 : 'gentype_word));
# 1362 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 ".\Parser.fsy"
                                           _1 
                   )
# 162 ".\Parser.fsy"
                 : 'gentype_word));
# 1373 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 ".\Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 164 ".\Parser.fsy"
                 : 'gentype_word));
# 1384 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 ".\Parser.fsy"
                                             _1 
                   )
# 165 ".\Parser.fsy"
                 : 'gentype_word));
# 1395 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 ".\Parser.fsy"
                                             _1 
                   )
# 166 ".\Parser.fsy"
                 : 'gentype_word));
# 1406 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 ".\Parser.fsy"
                                              _1 
                   )
# 167 ".\Parser.fsy"
                 : 'gentype_word));
# 1417 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 ".\Parser.fsy"
                                             _1 
                   )
# 168 ".\Parser.fsy"
                 : 'gentype_word));
# 1428 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dictionary_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 ".\Parser.fsy"
                                                 _1 
                   )
# 169 ".\Parser.fsy"
                 : 'gentype_word));
# 1439 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 ".\Parser.fsy"
                                              _1 
                   )
# 170 ".\Parser.fsy"
                 : 'gentype_word));
# 1450 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 ".\Parser.fsy"
                                               EExtension (_2) 
                   )
# 171 ".\Parser.fsy"
                 : 'gentype_word));
# 1461 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 ".\Parser.fsy"
                                                ERestriction (_2) 
                   )
# 172 ".\Parser.fsy"
                 : 'gentype_word));
# 1472 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 ".\Parser.fsy"
                                                 ESelect (_2) 
                   )
# 173 ".\Parser.fsy"
                 : 'gentype_word));
# 1483 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 ".\Parser.fsy"
                                               _1 
                   )
# 175 ".\Parser.fsy"
                 : 'gentype_word));
# 1494 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 ".\Parser.fsy"
                                                   EEmbedding (_2) 
                   )
# 176 ".\Parser.fsy"
                 : 'gentype_word));
# 1505 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 ".\Parser.fsy"
                                          _1 
                   )
# 177 ".\Parser.fsy"
                 : 'gentype_word));
# 1516 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 ".\Parser.fsy"
                                                           EWithState (_2) 
                   )
# 178 ".\Parser.fsy"
                 : 'gentype_word));
# 1527 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_with_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 ".\Parser.fsy"
                                               _1 
                   )
# 179 ".\Parser.fsy"
                 : 'gentype_word));
# 1538 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 ".\Parser.fsy"
                                         ENewRef 
                   )
# 180 ".\Parser.fsy"
                 : 'gentype_word));
# 1548 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 ".\Parser.fsy"
                                         EGetRef 
                   )
# 181 ".\Parser.fsy"
                 : 'gentype_word));
# 1558 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 ".\Parser.fsy"
                                         EPutRef 
                   )
# 182 ".\Parser.fsy"
                 : 'gentype_word));
# 1568 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\Parser.fsy"
                                                   EUntag (_2) 
                   )
# 183 ".\Parser.fsy"
                 : 'gentype_word));
# 1579 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 ".\Parser.fsy"
                                     EDo 
                   )
# 184 ".\Parser.fsy"
                 : 'gentype_word));
# 1589 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 ".\Parser.fsy"
                                       ETrue 
                   )
# 186 ".\Parser.fsy"
                 : 'gentype_word));
# 1599 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 ".\Parser.fsy"
                                       EFalse 
                   )
# 187 ".\Parser.fsy"
                 : 'gentype_word));
# 1609 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 ".\Parser.fsy"
                                         EInteger (_1) 
                   )
# 188 ".\Parser.fsy"
                 : 'gentype_word));
# 1620 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 ".\Parser.fsy"
                                         EDecimal (_1) 
                   )
# 189 ".\Parser.fsy"
                 : 'gentype_word));
# 1631 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 ".\Parser.fsy"
                                        EString (_1) 
                   )
# 190 ".\Parser.fsy"
                 : 'gentype_word));
# 1642 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 ".\Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 191 ".\Parser.fsy"
                 : 'gentype_word));
# 1653 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 ".\Parser.fsy"
                                                                                         EWithPermission (_2, _3) 
                   )
# 193 ".\Parser.fsy"
                 : 'gentype_with_permission));
# 1665 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 ".\Parser.fsy"
                                                                                                                               EHandle (_2, _3, _6, _7) 
                   )
# 195 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 1679 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 ".\Parser.fsy"
                                                                                                         EHandle (_2, _3, _6, []) 
                   )
# 196 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 1692 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 ".\Parser.fsy"
                                                                                    { Name = _1; Params = _2; Body = _4; } 
                   )
# 198 ".\Parser.fsy"
                 : 'gentype_handler));
# 1705 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 ".\Parser.fsy"
                                                         _3 
                   )
# 200 ".\Parser.fsy"
                 : 'gentype_return));
# 1716 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 ".\Parser.fsy"
                                         [] 
                   )
# 202 ".\Parser.fsy"
                 : 'gentype_param_list));
# 1726 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 203 ".\Parser.fsy"
                 : 'gentype_param_list));
# 1738 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 ".\Parser.fsy"
                                           [] 
                   )
# 205 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 1748 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 206 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 1760 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 ".\Parser.fsy"
                                                                                    EMatch (_3, []) 
                   )
# 208 ".\Parser.fsy"
                 : 'gentype_match_word));
# 1771 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 ".\Parser.fsy"
                                                                                                        EMatch (_3, _6) 
                   )
# 209 ".\Parser.fsy"
                 : 'gentype_match_word));
# 1783 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 ".\Parser.fsy"
                                                            [_1] 
                   )
# 211 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 1794 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 ".\Parser.fsy"
                                                              _1 :: _2 
                   )
# 212 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 1806 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 ".\Parser.fsy"
                                                                                     { Matcher = _1; Body = _3 } 
                   )
# 214 ".\Parser.fsy"
                 : 'gentype_match_clause));
# 1818 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 ".\Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 216 ".\Parser.fsy"
                 : 'gentype_if_word));
# 1831 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 ".\Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 218 ".\Parser.fsy"
                 : 'gentype_when_word));
# 1843 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 ".\Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 220 ".\Parser.fsy"
                 : 'gentype_while_word));
# 1855 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 ".\Parser.fsy"
                                                                      _2 
                   )
# 222 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 1866 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 ".\Parser.fsy"
                                                                                      ETupleLiteral ([], _3) 
                   )
# 224 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 1877 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 ".\Parser.fsy"
                                                                                          ETupleLiteral (_3, _5) 
                   )
# 225 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 1889 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 ".\Parser.fsy"
                                                                                    EListLiteral ([], _3) 
                   )
# 227 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 1900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 ".\Parser.fsy"
                                                                                        EListLiteral (_3, _5) 
                   )
# 228 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 1912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 ".\Parser.fsy"
                                                                                        EVectorLiteral ([], _3) 
                   )
# 230 ".\Parser.fsy"
                 : 'gentype_vector_literal));
# 1923 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 ".\Parser.fsy"
                                                                                            EVectorLiteral (_3, _5) 
                   )
# 231 ".\Parser.fsy"
                 : 'gentype_vector_literal));
# 1935 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_fixed_size_term_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 ".\Parser.fsy"
                                                                                                                    ESliceLiteral (_3, _5) 
                   )
# 233 ".\Parser.fsy"
                 : 'gentype_slice_literal));
# 1947 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 ".\Parser.fsy"
                                                                                                         EDictionaryLiteral (_3, _5) 
                   )
# 235 ".\Parser.fsy"
                 : 'gentype_dictionary_literal));
# 1959 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 ".\Parser.fsy"
                                                                                EDictionaryLiteral ([], _3) 
                   )
# 236 ".\Parser.fsy"
                 : 'gentype_dictionary_literal));
# 1970 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 ".\Parser.fsy"
                                                                                           ERecordLiteral (_3, _5) 
                   )
# 238 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 1982 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 ".\Parser.fsy"
                                                                     ERecordLiteral ([], _3) 
                   )
# 239 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 1993 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 ".\Parser.fsy"
                                                                       EVariantLiteral (_3) 
                   )
# 241 ".\Parser.fsy"
                 : 'gentype_variant_literal));
# 2004 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 ".\Parser.fsy"
                                                                                                           ECase (_3, _6) 
                   )
# 243 ".\Parser.fsy"
                 : 'gentype_case_word));
# 2016 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 ".\Parser.fsy"
                                                          [_1] 
                   )
# 245 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 2027 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            let _2 = parseState.GetInput(2) :?>  List<CaseClause>  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 ".\Parser.fsy"
                                                           _1 :: _2 
                   )
# 246 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 2039 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 ".\Parser.fsy"
                                                                             { Tag = _1; Body = _3 } 
                   )
# 248 ".\Parser.fsy"
                 : 'gentype_case_clause));
# 2051 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 ".\Parser.fsy"
                                         [] 
                   )
# 250 ".\Parser.fsy"
                 : 'gentype_field_list));
# 2061 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 ".\Parser.fsy"
                                                     _1 :: _3 
                   )
# 251 ".\Parser.fsy"
                 : 'gentype_field_list));
# 2073 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 ".\Parser.fsy"
                                                             (_1, _3) 
                   )
# 253 ".\Parser.fsy"
                 : 'gentype_field));
# 2085 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 ".\Parser.fsy"
                                                                                        { Qualifier = List.take (_1.Length - 1) _1; Name = List.last _1; Size = Some (_3) } 
                   )
# 255 ".\Parser.fsy"
                 :  Identifier ));
# 2097 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 ".\Parser.fsy"
                                                       { Qualifier = List.take (_1.Length - 1) _1; Name = List.last _1; Size = None } 
                   )
# 256 ".\Parser.fsy"
                 :  Identifier ));
# 2108 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 ".\Parser.fsy"
                                                          [_1] 
                   )
# 258 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 2119 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 ".\Parser.fsy"
                                               [_1] 
                   )
# 259 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 2130 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 ".\Parser.fsy"
                                                   [_1] 
                   )
# 260 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 2141 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 261 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 2153 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 ".\Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 265 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2164 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 ".\Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 266 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2175 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 ".\Parser.fsy"
                                                               ind _1 _2 
                   )
# 267 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2187 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 ".\Parser.fsy"
                                                                                ind (_1, _3) SEnd 
                   )
# 269 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2199 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 ".\Parser.fsy"
                                                           dot (_1, PWildcard) SEnd 
                   )
# 270 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2210 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 ".\Parser.fsy"
                                                                                  ind (_1, _3) _4 
                   )
# 271 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2223 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 ".\Parser.fsy"
                                                                                 ind (_1, _3) SEnd 
                   )
# 273 ".\Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2235 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 ".\Parser.fsy"
                                                             dot (_1, PWildcard) SEnd 
                   )
# 274 ".\Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2246 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_dict_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 ".\Parser.fsy"
                                                                                   ind (_1, _3) _4 
                   )
# 275 ".\Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2259 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 ".\Parser.fsy"
                                                      PTrue 
                   )
# 277 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2269 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 ".\Parser.fsy"
                                             PFalse 
                   )
# 278 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2279 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 ".\Parser.fsy"
                                               PInteger (_1) 
                   )
# 279 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2290 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 ".\Parser.fsy"
                                               PDecimal (_1) 
                   )
# 280 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2301 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 ".\Parser.fsy"
                                              PString (_1) 
                   )
# 281 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2312 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 ".\Parser.fsy"
                                                 PWildcard 
                   )
# 282 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2322 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 ".\Parser.fsy"
                                                      PRef (_2) 
                   )
# 283 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2333 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 284 ".\Parser.fsy"
                                                             PNamed (_1, _3) 
                   )
# 284 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2345 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 ".\Parser.fsy"
                                                    PConstructor (_1, SEnd) 
                   )
# 285 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2356 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 ".\Parser.fsy"
                                                                              PConstructor (_2, _3) 
                   )
# 286 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2368 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 ".\Parser.fsy"
                                                   _1 
                   )
# 287 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2379 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 288 ".\Parser.fsy"
                                                   _1 
                   )
# 288 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2390 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 ".\Parser.fsy"
                                                    _1 
                   )
# 289 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2401 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 ".\Parser.fsy"
                                                   _1 
                   )
# 290 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2412 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 ".\Parser.fsy"
                                                    _1 
                   )
# 291 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2423 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dict_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 ".\Parser.fsy"
                                                   _1 
                   )
# 292 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 2434 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 ".\Parser.fsy"
                                                                                 PTuple (_3) 
                   )
# 294 ".\Parser.fsy"
                 : 'gentype_tuple_pattern));
# 2445 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 ".\Parser.fsy"
                                                                               PList (_3) 
                   )
# 296 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 2456 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 ".\Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 298 ".\Parser.fsy"
                 : 'gentype_vector_pattern));
# 2467 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 ".\Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 300 ".\Parser.fsy"
                 : 'gentype_slice_pattern));
# 2478 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 ".\Parser.fsy"
                                                                                   PRecord (_3) 
                   )
# 302 ".\Parser.fsy"
                 : 'gentype_record_pattern));
# 2489 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_dict_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 ".\Parser.fsy"
                                                                                    PDictionary (_3) 
                   )
# 304 ".\Parser.fsy"
                 : 'gentype_dict_pattern));
# 2500 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 ".\Parser.fsy"
                                                                          _1 
                   )
# 308 ".\Parser.fsy"
                 : 'gentype_fixed_size_term_expr));
# 2511 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 310 ".\Parser.fsy"
                                                                                    [_1] 
                   )
# 310 ".\Parser.fsy"
                 : 'gentype_fixed_size_term_factor_list));
# 2522 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor in
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_factor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 ".\Parser.fsy"
                                                                                         _1 :: _3 
                   )
# 311 ".\Parser.fsy"
                 : 'gentype_fixed_size_term_factor_list));
# 2534 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 ".\Parser.fsy"
                                                          FixConst (_1) 
                   )
# 313 ".\Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
# 2545 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 ".\Parser.fsy"
                                              FixVar (_1) 
                   )
# 314 ".\Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
# 2556 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 ".\Parser.fsy"
                                                    FixCoeff (_1, _2) 
                   )
# 315 ".\Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
|]
# 2569 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 73;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
